{"version":2,"kind":"Notebook","sha256":"e571a99c915c8be75f76abed43670384a2bce685150816ae0ad229c937caafc6","slug":"foundations.act.act-tower-data","location":"/foundations/act/act-tower-data.ipynb","dependencies":[],"frontmatter":{"title":"Work with BNF Tower Data","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Max Grover","given":"Max","family":"Grover"},"name":"Max Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/mgrover1/arm-field-site-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":2}},"source_url":"https://github.com/mgrover1/arm-field-site-cookbook/blob/main/foundations/act/act-tower-data.ipynb","edit_url":"https://github.com/mgrover1/arm-field-site-cookbook/edit/main/foundations/act/act-tower-data.ipynb","exports":[{"format":"ipynb","filename":"act-tower-data.ipynb","url":"/arm-field-site-cookbook/build/act-tower-data-e113c78bb05d7ea9ba1be728ee7fa155.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ksbMCPxYYl"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"h0AqttlOAU"}],"key":"gAcuil9Bau"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import act\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\nmpl.rcParams['font.size'] = 14\nmpl.rcParams['xtick.major.size'] = 14","key":"Gu3bgVsMlB"},{"type":"output","id":"1t_tGotF9fe7QIYiedFbX","data":[],"key":"sQWCVnQJ2R"}],"key":"CsCzagpoSN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Search and Find BNF Tower Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TAM2XjxbFn"}],"identifier":"search-and-find-bnf-tower-data","label":"Search and Find BNF Tower Data","html_id":"search-and-find-bnf-tower-data","implicit":true,"key":"hUHZKQPJRi"}],"key":"mm9IaFb1db"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"username=\"username\"\ntoken=\"token\"\n\nresults = act.discovery.download_arm_data(\n        username, token, 'bnftowerdtsch1S10.b1', '2025-04-04', '2025-04-05'\n)","key":"jodUqxpWbC"},{"type":"output","id":"ooVG9qu7ldRbZvNK_ZCh1","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mConnectionRefusedError\u001b[39m                    Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[2]\u001b[39m\u001b[32m, line 4\u001b[39m\n\u001b[32m      1\u001b[39m username=\u001b[33m\"\u001b[39m\u001b[33musername\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m      2\u001b[39m token=\u001b[33m\"\u001b[39m\u001b[33mtoken\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m4\u001b[39m results = \u001b[43mact\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdiscovery\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdownload_arm_data\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m      5\u001b[39m \u001b[43m        \u001b[49m\u001b[43musername\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtoken\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mbnftowerdtsch1S10.b1\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43m2025-04-04\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43m2025-04-05\u001b[39;49m\u001b[33;43m'\u001b[39;49m\n\u001b[32m      6\u001b[39m \u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/act/discovery/arm.py:124\u001b[39m, in \u001b[36mdownload_arm_data\u001b[39m\u001b[34m(username, token, datastream, startdate, enddate, time, output)\u001b[39m\n\u001b[32m    122\u001b[39m \u001b[38;5;66;03m# if the response is an html doc, then there was an error with the user\u001b[39;00m\n\u001b[32m    123\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m response_body[\u001b[32m1\u001b[39m:\u001b[32m14\u001b[39m] == \u001b[33m'\u001b[39m\u001b[33m!DOCTYPE html\u001b[39m\u001b[33m'\u001b[39m:\n\u001b[32m--> \u001b[39m\u001b[32m124\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mConnectionRefusedError\u001b[39;00m(\u001b[33m'\u001b[39m\u001b[33mError with user. Check username or token.\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m    126\u001b[39m \u001b[38;5;66;03m# parse into json object\u001b[39;00m\n\u001b[32m    127\u001b[39m response_body_json = json.loads(response_body)\n\n\u001b[31mConnectionRefusedError\u001b[39m: Error with user. Check username or token.","ename":"ConnectionRefusedError","evalue":"Error with user. Check username or token."}],"key":"C1TNncc0uz"}],"key":"JEv64LDSAI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load and Visualize Data Using ACT","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OMj4YLdueT"}],"identifier":"load-and-visualize-data-using-act","label":"Load and Visualize Data Using ACT","html_id":"load-and-visualize-data-using-act","implicit":true,"key":"QOHkjlX4qo"}],"key":"WymGkpDujK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds = act.io.read_arm_netcdf(results)","key":"ehcbiHOZP5"},{"type":"output","id":"lm1gpPClENfzkihDJsokm","data":[],"key":"vsR1wgCeFZ"}],"key":"NqCPKYed4C"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12,8))\nds.temperature.plot(x='time');","key":"If84F51KU1"},{"type":"output","id":"vs7748JAARTadeKZRTEdS","data":[],"key":"EeFyRxFBQL"}],"key":"UcM2OgKGD1"}],"key":"DB8OjgjmDz"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"ACT Basics with BNF","url":"/foundations/act/act-basics-bnf","group":"Timeseries Data with ACT"},"next":{"title":"Introduction to Xarray","url":"/foundations/xarray/xarray-intro","group":"Model and Observational Data with Xarray"}}},"domain":"http://localhost:3000"}