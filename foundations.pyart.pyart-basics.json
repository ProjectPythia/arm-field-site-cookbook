{"version":2,"kind":"Notebook","sha256":"e7728ba177544ebf409299c94d48cc8bb08a1441e882c3bf06d1928b6e76946e","slug":"foundations.pyart.pyart-basics","location":"/foundations/pyart/pyart-basics.ipynb","dependencies":[],"frontmatter":{"title":"Py-ART Basics with Xradar","content_includes_title":true,"kernelspec":{"name":"conda-base-py","display_name":"Python [conda env:base] *","language":"python"},"authors":[{"nameParsed":{"literal":"Max Grover","given":"Max","family":"Grover"},"name":"Max Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/mgrover1/arm-field-site-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":2}},"edit_url":"https://github.com/mgrover1/arm-field-site-cookbook/blob/main/foundations/pyart/pyart-basics.ipynb","thumbnail":"/arm-field-site-cookbook/build/arm_logo-44172bc18a7de0ac1e2b3bddfd1c6c46.png","exports":[{"format":"ipynb","filename":"pyart-basics.ipynb","url":"/arm-field-site-cookbook/build/pyart-basics-44fd1808e084013f83e84228aad4efde.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/arm-field-site-cookbook/build/arm_logo-44172bc18a7de0ac1e2b3bddfd1c6c46.png","alt":"ARM Logo","width":500,"key":"O3igEElKsv","urlSource":"../../images/arm_logo.png"}],"key":"nU40AuSBYC"}],"key":"JHrl4UgRl8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Py-ART Basics with Xradar","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Lo00YExi2D"}],"identifier":"py-art-basics-with-xradar","label":"Py-ART Basics with Xradar","html_id":"py-art-basics-with-xradar","implicit":true,"key":"NlqXVGXD4G"},{"type":"thematicBreak","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yo7t3400vd"}],"key":"GxyqIZxHA4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eSf1m7eEKo"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"sodpPMP0rq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ck0jLjtt25"}],"key":"kZd7yWjXKg"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"General overview of Py-ART and its functionality","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fAyjdytXOU"}],"key":"S6VXKN3Ohc"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Reading data using Py-ART","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ZfLbTvo8XN"}],"key":"jM0uYe5hv7"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"An overview of the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"iPiznkl2yR"},{"type":"inlineCode","value":"pyart.Radar","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uAjw79RLNb"},{"type":"text","value":" object","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ipQg8EXyyp"}],"key":"ym5yhRJfY9"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Create a Plot of our Radar Data","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"WjLeEK4FMG"}],"key":"M6raP1fD0C"}],"key":"Yqb7jicWxF"}],"key":"cmFY3rOl0x"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qZ2mX4YjNg"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"QzqHcxVDBx"},{"type":"table","position":{"start":{"line":2,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"p0YP23yyzo"}],"key":"BSS99xRwtn"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"piHVIibdaB"}],"key":"zLcNrJ7dS5"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"nwrVJsjddx"}],"key":"tnapvMI1vH"}],"key":"PMY2he7bem"},{"type":"tableRow","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BUTkqniXsN"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"BzPjwFRlf7"}],"key":"YZwNYOm2wc"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ubjot2WoUB"}],"key":"ekeRtYzaQ8"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Basic features","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ArUFBIWdMT"}],"key":"ftsjdV9C8k"}],"key":"jlqNCs0JiG"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/radar-cookbook/README.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Weather Radar Basics","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UNusgA3agC"}],"urlSource":"https://projectpythia.org/radar-cookbook/README.html","key":"CCh4C4ZaUj"}],"key":"uskMwwPwoM"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nY34hjziSl"}],"key":"KbbodwETq8"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Background Information","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MDXbQAbCzl"}],"key":"OOlWoCCdmq"}],"key":"SK9C9KrneJ"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Matplotlib Basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"DTbeKJYUkU"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","key":"CLrUIepmAX"}],"key":"yyXKpLLXpP"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eLPJobCxkr"}],"key":"rFL90u6rI1"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Basic plotting","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"k5dpykzf45"}],"key":"tcajnM9R1B"}],"key":"dsRnjNVUkg"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/numpy-basics.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"NumPy Basics","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"owkD0vl27A"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/numpy-basics.html","key":"ReSIMGF4PL"}],"key":"TGBvpyRtho"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Hrn3tB9hU9"}],"key":"Xucvt5DN5D"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Basic arrays","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JLcDyMh0oh"}],"key":"Mt0Az2WGLB"}],"key":"tX0OnJY41R"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Xarray Basics","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"pinZsPJXQ0"}],"urlSource":"https://foundations.projectpythia.org/core/xarray.html","key":"teBo4s8wOJ"}],"key":"zyW0z3IZ25"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Xb417kwWLg"}],"key":"qhexK1Kw6p"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Multi-dimensional arrays","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"oir8ybHSSA"}],"key":"BZYjGepfIN"}],"key":"J1LlLKiyHs"}],"key":"vBJfD68glp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"d7nUPZKJ8G"}],"key":"oxIrvSQZFy"},{"type":"text","value":": 45 minutes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"mTgJuR3IPA"}],"key":"paH5SaiNIu"}],"key":"fjEo8Q5vgd"},{"type":"thematicBreak","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"BdTSQ5os05"}],"key":"XtjzH2yR4b"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wbJIh1XQag"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"vZJMgwJr4b"}],"key":"ERFFH3QNtk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport warnings\n\nimport cartopy.crs as ccrs\nimport matplotlib.pyplot as plt\n\n\nimport pyart\nfrom pyart.testing import get_test_data\nimport xradar as xd\n\nwarnings.filterwarnings(\"ignore\")","key":"Nq4tgzL1sI"},{"type":"output","id":"UvbTyt6rnojNzcv0B9IxX","data":[],"key":"R3nOk3k2sp"}],"key":"IwnoXMBce2"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"An Overview of Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GSlFfCuNyG"}],"identifier":"an-overview-of-py-art","label":"An Overview of Py-ART","html_id":"an-overview-of-py-art","implicit":true,"key":"yIZX2ESAeJ"}],"key":"n5ld34g1tn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"History of the Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XWM4gawBCr"}],"identifier":"history-of-the-py-art","label":"History of the Py-ART","html_id":"history-of-the-py-art","implicit":true,"key":"ckgheQa5QB"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Development began to address the needs of ARM with the acquisition of a number of\nnew scanning cloud and precipitation radar as part of the American Recovery Act.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bxgjcXGNbk"}],"key":"rfnuzc7Xfl"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The project has since expanded to work with a variety of weather radars and a wider user\nbase including radar researchers and climate modelers.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"i8MdcPqIc3"}],"key":"aOPVdBfDUz"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The software has been released on GitHub as open source software under a BSD license.\nRuns on Linux, OS X. It also runs on Windows with more limited functionality.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"AI6lZhcrNT"}],"key":"uMru1QRxHh"}],"key":"ASbYdHu5Sh"},{"type":"heading","depth":3,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"What can Py-ART Do?","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"yfjdd6Mxyp"}],"identifier":"what-can-py-art-do","label":"What can Py-ART Do?","html_id":"what-can-py-art-do","implicit":true,"key":"tjMppXeHIr"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"https://github.com/ARM-DOE/pyart","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Py-ART","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"gHkqXaMLwq"}],"urlSource":"https://github.com/ARM-DOE/pyart","error":true,"key":"Lv0CoKW12S"},{"type":"text","value":" can be used for a variety of tasks from basic plotting to more complex\nprocessing pipelines. Specific uses for Py-ART include:","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"n5xQatVpaY"}],"key":"Ni1g6bumJp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":15,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.io.html","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"pyart.io","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"jclJ1n95IS"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.io.html","key":"nVfjNQrwbX"},{"type":"text","value":" Module for reading radar data in a variety of file formats.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"e7LfnzstAe"}],"key":"JU16C3xuaH"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.html","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"pyart.graph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Gy00J19zYr"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.html","key":"EQ9Hm0fFU9"},{"type":"text","value":" Module for creating plots and visualization of radar data.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"vc6nd3dVem"}],"key":"IlYgSORR0J"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.correct.html","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"pyart.correct","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"cCO2WhREqW"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.correct.html","key":"mMVRAJHcgT"},{"type":"text","value":" Module for correcting radar moments while in antenna coordinates, such as:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"ugCD53ICdw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Doppler unfolding/de-aliasing.","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"sDJkyaYaS9"}],"key":"mEN4vENLNU"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Attenuation correction.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"gBMPLp3AmB"}],"key":"SqPPuNDzjs"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Phase processing using a Linear Programming method.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"YTGPlpSRhQ"}],"key":"TxXsuYXiBr"}],"key":"TE9jgopivN"}],"key":"jSZ5nHuIj5"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.map.html","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"pyart.map","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"luWGco864U"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.map.html","key":"RPZPZ9EtAe"},{"type":"text","value":" Mapping data from one or multiple radars onto a Cartesian grid.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"TdyqGIphiR"}],"key":"OaWPXt0QHt"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.retrieve.html","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"pyart.retrieve","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"kjGJvWDhHn"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.retrieve.html","key":"xAgILYJlH8"},{"type":"text","value":" Performing retrievals.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"uCJNVGwpKE"}],"key":"loY7I5sFHu"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.io.write_cfradial.html","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"pyart​.io​.write​_cfradial","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"kZlw31CMq0"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.io.write_cfradial.html","key":"VJoSJfCpJL"},{"type":"text","value":" Writing radial and Cartesian data to NetCDF files.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"Qtb3a4aTjH"}],"key":"tQkjBRMgbE"}],"key":"p7z6OrgiTo"},{"type":"heading","depth":3,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Py-ART 2.0","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"vAwXxVsHed"}],"identifier":"py-art-2-0","label":"Py-ART 2.0","html_id":"py-art-2-0","implicit":true,"key":"Jjsj9zUIvL"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/userguide/pyart_2_0.html","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Py-ART 2.0","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"oFS3clLhEA"}],"urlSource":"https://arm-doe.github.io/pyart/userguide/pyart_2_0.html","key":"SaAOPsvW50"},{"type":"text","value":" offers the option to use ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"BcQelPn4oz"},{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"xradar","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"eWGY113TQ3"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/","key":"Di2hEbWXsm"},{"type":"text","value":" for reading weather radar data into the xarray data model. Py-ART 2.0 also supports ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"PSCevPMHPn"},{"type":"link","url":"https://cmweather.readthedocs.io/en/latest/","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"cmweather","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"PWNhydxWrE"}],"urlSource":"https://cmweather.readthedocs.io/en/latest/","key":"F5HIAnqjmd"},{"type":"text","value":", a new package dedicated to supporting color vision deficiency (CVD) friendly colormaps. Please check the ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"cSff75dKBd"},{"type":"link","url":"https://arm-doe.github.io/pyart/userguide/pyart_2_0.html","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"linked documentation","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"mYfxoath1O"}],"urlSource":"https://arm-doe.github.io/pyart/userguide/pyart_2_0.html","key":"m2fSfSTzRD"},{"type":"text","value":" to view all the changes within Py-ART 2.0.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"WGVGSaa9Sm"}],"key":"lgKPrZgEqk"},{"type":"thematicBreak","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"BpFvEEukum"}],"key":"VZFgl5CHUe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reading in Data Using Py-ART and xradar","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eHqLWKeONw"}],"identifier":"reading-in-data-using-py-art-and-xradar","label":"Reading in Data Using Py-ART and xradar","html_id":"reading-in-data-using-py-art-and-xradar","implicit":true,"key":"s8iyDxNexl"}],"key":"xxnRA1aEyz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reading data in using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P64PNgqbh3"},{"type":"inlineCode","value":"xradar.io.open_","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GlWNq8ceYS"}],"identifier":"reading-data-in-using-xradar-io-open","label":"Reading data in using xradar.io.open_","html_id":"reading-data-in-using-xradar-io-open","implicit":true,"key":"oUq00FKt9d"}],"key":"acfq2mTE7M"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"When reading in a radar file, we use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dRHvxjHbTc"},{"type":"inlineCode","value":"xradar.io","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gYgxSTJlAa"},{"type":"text","value":" module.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fOd5HGf9fi"}],"key":"OYcRlY0gVg"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"xradar.io","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KFFbMnj0Ta"},{"type":"text","value":" can read a variety of different radar formats, such as Cf/Radial, ODIM_H5, etc.\nThe documentation on what formats can be read by xradar can be found here:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lQCvlQNY7q"}],"key":"VbIFkfPCGJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"xradar readers Documentation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"SaAJzpRFhx"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","key":"XQhpOuJYds"}],"key":"Dn59wDiw30"}],"key":"LB15tsiiQb"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Let’s take a look at one of these readers:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Qrz9b4XMnz"}],"key":"s1LrrOj8fJ"}],"key":"VfEB0gfpwT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"?xd.io.open_cfradial1_datatree","key":"V8vnIlm7RZ"},{"type":"output","id":"8QOR4ncIAk3XbTTdQiLpd","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"\u001b[0;31mSignature:\u001b[0m \u001b[0mxd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen_cfradial1_datatree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename_or_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;31mDocstring:\u001b[0m\nOpen CfRadial1 dataset as :py:class:`datatree.DataTree`.\n\nParameters\n----------\nfilename_or_obj : str, Path, file-like or xarray.DataStore\n    Strings and Path objects are interpreted as a path to a local or remote\n    radar file\n\nKeyword Arguments\n-----------------\nsweep : int, list of int, optional\n    Sweep number(s) to extract, default to first sweep. If None, all sweeps are\n    extracted into a list.\nfirst_dim : str\n    Can be ``time`` or ``auto`` first dimension. If set to ``auto``,\n    first dimension will be either ``azimuth`` or ``elevation`` depending on\n    type of sweep. Defaults to ``auto``.\nreindex_angle : bool or dict\n    Defaults to False, no reindexing. Given dict should contain the kwargs to\n    reindex_angle. Only invoked if `decode_coord=True`.\nfix_second_angle : bool\n    If True, fixes erroneous second angle data. Defaults to ``False``.\noptional : bool\n    Import optional mandatory data and metadata, defaults to ``True``.\nsite_coords : bool\n    Attach radar site-coordinates to Dataset, defaults to ``True``.\nengine: str\n    Engine that will be passed to Xarray.open_dataset, defaults to \"netcdf4\"\n\nReturns\n-------\ndtree: datatree.DataTree\n    DataTree with CfRadial2 groups.\n\u001b[0;31mFile:\u001b[0m      /opt/conda/lib/python3.11/site-packages/xradar/io/backends/cfradial1.py\n\u001b[0;31mType:\u001b[0m      function","content_type":"text/plain"}}}],"key":"nuMY9ulY0i"}],"key":"wcG7viIiPy"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s use a sample data file from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xsT0XzOIZQ"},{"type":"inlineCode","value":"pyart","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GKdBndygPN"},{"type":"text","value":" - which is ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JGVHV4WVD2"},{"type":"link","url":"https://github.com/NCAR/CfRadial","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"cfradial","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UGJQCZ4FbL"}],"key":"NKs4uTaNSc"},{"type":"text","value":" format","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PznGEIsZ4Z"}],"urlSource":"https://github.com/NCAR/CfRadial","error":true,"key":"nw2h6uD9A6"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"edeJfe6Mff"}],"key":"Qnhm4ktiTR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When we read this in, we get a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lCRhUznoC0"},{"type":"link","url":"https://docs.xarray.dev/en/stable/generated/xarray.DataTree.html#xarray.DataTree","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"xarray.DataTree","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X9dTx7OliP"},{"type":"text","value":" object","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vssoPSYQGM"}],"urlSource":"https://docs.xarray.dev/en/stable/generated/xarray.DataTree.html#xarray.DataTree","key":"sFFPNPNypO"},{"type":"text","value":" that bundles the different radar sweeps into one structure!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bBoTSNK2fg"}],"key":"JlZ0yX773y"}],"key":"aO7UpBqDYV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"file = \"/data/project/ARM_Summer_School_2025/radar/csapr2/ppi/bnfcsapr2cfrS3.a1.20250315.190050.nc\"\ndt = xd.io.open_cfradial1_datatree(file)\ndt","key":"TVYCuDYeRu"},{"type":"output","id":"TQZvSz7Bpogs8fpG9GF5M","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"516b8c1de231b092beabe569d13be197","path":"/arm-field-site-cookbook/build/516b8c1de231b092beabe569d13be197.html"},"text/plain":{"content_type":"text/plain","hash":"c89df2c9ab7ee34c402d2032c2d5b1b9","path":"/arm-field-site-cookbook/build/c89df2c9ab7ee34c402d2032c2d5b1b9.txt"}}}],"key":"bV3GOKVKaJ"}],"key":"Kwg7cRbRHX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Investigate the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c0w2veaO7m"},{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/notebooks/CfRadial1.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"xradar","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n9bVpMGwBn"},{"type":"text","value":" object","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dLB2eLYV9Z"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/notebooks/CfRadial1.html","key":"THXfDk4L7p"}],"identifier":"investigate-the-xradar-object","label":"Investigate the xradar object","html_id":"investigate-the-xradar-object","implicit":true,"key":"iFpHq4Dgq4"}],"key":"A0hw8CgqNm"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Within this ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eFNqZwFXHf"},{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/notebooks/CfRadial1.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"xradar","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VuoojEWS7z"},{"type":"text","value":" object","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z2jHq85Vnq"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/notebooks/CfRadial1.html","key":"LwWK90ZAv4"},{"type":"text","value":" object are the actual data fields, each stored in a different group, mimicking the FM301/cfradial2 data standard.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pPsq0wQXXY"}],"key":"vewu8MJZKL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This is where data such as reflectivity and velocity are stored.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eTtBRrkjKk"}],"key":"FrNtNW6pCe"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To see what fields are present we can add the fields and keys additions to the variable where the radar object is stored.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sIhePbZPNv"}],"key":"fW2eps5c2r"}],"key":"urXOnZpqoC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dt[\"sweep_0\"]","key":"qkU6903VuH"},{"type":"output","id":"5BhFdgUp46FOaBe8a20jc","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"e4a118a6b0b9d7c9fc51e189f6ceec92","path":"/arm-field-site-cookbook/build/e4a118a6b0b9d7c9fc51e189f6ceec92.html"},"text/plain":{"content":"DataTree('sweep_0', parent=\"root\")\n    Dimensions:                                                (azimuth: 360,\n                                                                range: 1100)\n    Coordinates:\n        time                                                   (azimuth) datetime64[ns] 3kB ...\n      * range                                                  (range) float32 4kB ...\n      * azimuth                                                (azimuth) float32 1kB ...\n        elevation                                              (azimuth) float32 1kB ...\n        latitude                                               float32 4B ...\n        longitude                                              float32 4B ...\n        altitude                                               float32 4B ...\n    Data variables: (12/38)\n        time_offset                                            (azimuth) datetime64[ns] 3kB ...\n        attenuation_corrected_differential_reflectivity        (azimuth, range) float32 2MB ...\n        attenuation_corrected_differential_reflectivity_lag_1  (azimuth, range) float32 2MB ...\n        attenuation_corrected_reflectivity_h                   (azimuth, range) float32 2MB ...\n        censor_mask                                            (azimuth, range) int32 2MB ...\n        classification_mask                                    (azimuth, range) int32 2MB ...\n        ...                                                     ...\n        unthresholded_power_copolar_v                          (azimuth, range) float32 2MB ...\n        sweep_fixed_angle                                      float32 4B ...\n        nyquist_velocity                                       (azimuth) float32 1kB ...\n        prt                                                    (azimuth) float32 1kB ...\n        sweep_mode                                             <U6 24B 'sector'\n        sweep_number                                           float64 8B ...","content_type":"text/plain"}}}],"key":"RZphGiZYDB"}],"key":"r0AOhC0LAl"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extract a sample data field","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ycIufX34Wc"}],"identifier":"extract-a-sample-data-field","label":"Extract a sample data field","html_id":"extract-a-sample-data-field","implicit":true,"key":"JJmS1ayKz3"}],"key":"nuod3QUjXQ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The fields are stored in a dictionary, each containing coordinates, units and more.\nAll can be accessed by just adding the fields addition to the radar object variable.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tVT3GIdVon"}],"key":"pymk9J6zgR"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For an individual field, we add a string in brackets after the fields addition to see\nthe contents of that field.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"CNh8LFMSoW"}],"key":"TkziYo8Otc"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let’s take a look at ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"o7nlKdDboN"},{"type":"inlineCode","value":"'corrected_reflectivity_horizontal'","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ppNj2nIMBj"},{"type":"text","value":", which is a common field to investigate.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"XW1d6M2p8A"}],"key":"HMxDAzlRm1"}],"key":"mWnUkRdSQ2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(dt[\"sweep_0\"][\"uncorrected_reflectivity_h\"])","key":"BAFMSRTtFc"},{"type":"output","id":"tUkLgaP7wDVZABUpVxoSu","data":[{"name":"stdout","output_type":"stream","text":"<xarray.DataArray 'uncorrected_reflectivity_h' (azimuth: 360, range: 1100)> Size: 2MB\n[396000 values with dtype=float32]\nCoordinates:\n    time       (azimuth) datetime64[ns] 3kB 2025-03-15T00:00:13.781999 ... 20...\n  * range      (range) float32 4kB 0.0 100.0 200.0 ... 1.098e+05 1.099e+05\n  * azimuth    (azimuth) float32 1kB 0.5219 1.544 2.554 ... 357.5 358.6 359.5\n    elevation  (azimuth) float32 1kB ...\n    latitude   float32 4B ...\n    longitude  float32 4B ...\n    altitude   float32 4B ...\nAttributes:\n    long_name:          Uncorrected Reflectivity, Horizontal Channel\n    units:              dBZ\n    standard_name:      equivalent_reflectivity_factor\n    unpacking_details:  Can be unpacked as follows: multiply packed values by...\n"}],"key":"DIKBVltfky"}],"key":"soEFdpb8Xa"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can go even further in the dictionary and access the actual reflectivity data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U4aUDbO1vn"}],"key":"I0mtPbTKaK"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We use add ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aPytbrwL4t"},{"type":"inlineCode","value":".data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yttDl8Ikjq"},{"type":"text","value":" at the end, which will extract the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cDo578H9bd"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"data array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ehPc39ioxZ"}],"key":"IaFlIK2fX6"},{"type":"text","value":" (which is a numpy array) from the dictionary.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AJ804QAPYn"}],"key":"DYKroJXIOS"}],"key":"tu8nJYzbbp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"reflectivity = dt[\"sweep_0\"][\"uncorrected_reflectivity_h\"].data\nprint(type(reflectivity), reflectivity)","key":"a15kwIkUXV"},{"type":"output","id":"45HbOtpceXFBTUkIwCt3o","data":[{"name":"stdout","output_type":"stream","text":"<class 'numpy.ndarray'> [[16.169746  12.304158  14.100647  ... 16.010887  15.720625  14.526235 ]\n [12.296313  11.109768  11.001901  ... 12.617955  11.786393  11.502014 ]\n [16.142288  10.931296  16.201126  ... 12.519894  14.834147  14.602722 ]\n ...\n [15.406827  15.0596895  9.258366  ... 18.995882  20.555061  19.254765 ]\n [11.7962    10.123268  12.527739  ... 19.594057  15.3224945 18.236885 ]\n [14.712551  13.573075  14.082995  ... 12.149221  11.835424  10.58808  ]]\n"}],"key":"FXaWA0TuFh"}],"key":"BofGAaiwB2"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Lets’ check the size of this array...","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WyZr9Tgog2"}],"key":"h7e1oKmm3D"}],"key":"OyVxVth97P"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"reflectivity.shape","key":"RuXzDLimR9"},{"type":"output","id":"cmoDFsBkcdaYZyqd__MKg","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"(360, 1100)","content_type":"text/plain"}}}],"key":"BKRQlUNrKn"}],"key":"SNoACm0uQ3"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This reflectivity data array, numpy array, is a two-dimensional array with dimensions:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lpqiy8qQ5d"}],"key":"ewzZQhCWsw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Range (distance away from the radar)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"DCQmrtAuRd"}],"key":"T3q8xh8B2z"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Azimuth (direction around the radar)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PIGKI5Onv9"}],"key":"nND82Ud5by"}],"key":"Mx7Sqw34Ec"}],"key":"oTmwbl78a7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dt[\"sweep_0\"].dims","key":"PtzqbeiIr1"},{"type":"output","id":"blLM4lTvMVJD3ll27W9BZ","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"Frozen({'azimuth': 360, 'range': 1100})","content_type":"text/plain"}}}],"key":"wsgYK67ykq"}],"key":"MPfMgcpcLI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If we wanted to look the 300th ray, at the second gate, we would use something like the following:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZSPdRPUHBH"}],"key":"lCFsh6RYcY"}],"key":"aHHgUYWPGv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(reflectivity[300, 2])","key":"grcPDWH5Uq"},{"type":"output","id":"rP_ggI7zg82W3wlHpx6nR","data":[{"name":"stdout","output_type":"stream","text":"12.888605\n"}],"key":"xCWLhmswug"}],"key":"XAxA7N3zDm"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also select a specific azimuth if desired, using the xarray syntax:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lVnrKaGd4w"}],"key":"lIQtdumxig"}],"key":"D9oinfFM8C"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dt[\"sweep_0\"].sel(azimuth=180, method=\"nearest\")","key":"PQ6vEL2HzU"},{"type":"output","id":"t0HtZythU-gji0t75ciYC","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"4aba58d76c5fccb1cf899dcff0bbaed4","path":"/arm-field-site-cookbook/build/4aba58d76c5fccb1cf899dcff0bbaed4.html"},"text/plain":{"content":"DataTree('sweep_0', parent=None)\n    Dimensions:                                                (range: 1100)\n    Coordinates:\n        time                                                   datetime64[ns] 8B ...\n      * range                                                  (range) float32 4kB ...\n        azimuth                                                float32 4B 179.5\n        elevation                                              float32 4B ...\n        latitude                                               float32 4B ...\n        longitude                                              float32 4B ...\n        altitude                                               float32 4B ...\n    Data variables: (12/38)\n        time_offset                                            datetime64[ns] 8B ...\n        attenuation_corrected_differential_reflectivity        (range) float32 4kB ...\n        attenuation_corrected_differential_reflectivity_lag_1  (range) float32 4kB ...\n        attenuation_corrected_reflectivity_h                   (range) float32 4kB ...\n        censor_mask                                            (range) int32 4kB ...\n        classification_mask                                    (range) int32 4kB ...\n        ...                                                     ...\n        unthresholded_power_copolar_v                          (range) float32 4kB ...\n        sweep_fixed_angle                                      float32 4B ...\n        nyquist_velocity                                       float32 4B ...\n        prt                                                    float32 4B ...\n        sweep_mode                                             <U6 24B 'sector'\n        sweep_number                                           float64 8B ...","content_type":"text/plain"}}}],"key":"qyxAlOrMLM"}],"key":"hev6XnbUfu"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RhRzq73TaW"}],"key":"SYIaTx5WjY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting our Radar Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dT2wNONfNG"}],"identifier":"plotting-our-radar-data","label":"Plotting our Radar Data","html_id":"plotting-our-radar-data","implicit":true,"key":"dkCslF4X13"}],"key":"GM7xEIoeAO"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"An Overview of Py-ART Plotting Utilities","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YQijUR0BvB"}],"identifier":"an-overview-of-py-art-plotting-utilities","label":"An Overview of Py-ART Plotting Utilities","html_id":"an-overview-of-py-art-plotting-utilities","implicit":true,"key":"wgqZiX8upI"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that we have loaded the data and inspected it, the next logical thing to do is to visualize the data! Py-ART’s visualization functionality is done through the objects in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FTlvyWzg9R"},{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"pyart.graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GaSvln4n6e"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.html","key":"lU4OxaIC2J"},{"type":"text","value":" module.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"M6Xm8zKZXq"}],"key":"ZU5gNaQJew"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In Py-ART there are 4 primary visualization classes in pyart.graph:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QoQzdxE9d3"}],"key":"IsQON4yFo6"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.RadarDisplay.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"RadarDisplay","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"eKemXuUkRM"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.RadarDisplay.html","key":"OWWZco2GQ4"}],"key":"TcSP4j0xDP"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.RadarMapDisplay.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"RadarMapDisplay","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"X1GqccJ7GU"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.RadarMapDisplay.html","key":"GQfJmgDBLL"}],"key":"dQ2keZnOTU"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.AirborneRadarDisplay.html","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"AirborneRadarDisplay","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"E6TAI8DUPI"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.AirborneRadarDisplay.html","key":"ooWawTxJM6"}],"key":"AVQfXliVgQ"}],"key":"ngxxxe8sRT"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Plotting grid data","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"J35sDlUIlD"}],"key":"XBhMm0d1Lq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.GridMapDisplay.html","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"GridMapDisplay","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"z6KlMP1UB4"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.GridMapDisplay.html","key":"y1XSH8xYVI"}],"key":"sn3QW3dyEn"}],"key":"ltDl4xZtJO"},{"type":"heading","depth":3,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Bam3KZGWi5"},{"type":"link","url":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.RadarMapDisplay.html","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"RadarMapDisplay","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"nmktyu0ltG"}],"urlSource":"https://arm-doe.github.io/pyart/API/generated/pyart.graph.RadarMapDisplay.html","key":"J59T5xoaUM"},{"type":"text","value":" with our data","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"navZCP1vKu"}],"identifier":"use-the-radarmapdisplay-with-our-data","label":"Use the RadarMapDisplay with our data","html_id":"use-the-radarmapdisplay-with-our-data","implicit":true,"key":"YxEwsuq5Ke"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"For the this example, we will be using ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"BMqYPj0jNy"},{"type":"inlineCode","value":"RadarMapDisplay","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"GtpJcduKn6"},{"type":"text","value":", using Cartopy to deal with geographic coordinates.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"NLxO07oFrX"}],"key":"tLR9ku0qpc"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We start by creating a figure first, and adding our traditional radar methods to the xradar object.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"SQGRGtRcWQ"}],"key":"xecNaMMFqa"}],"key":"wsiJMx6LBx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=[10, 10])\nradar = pyart.xradar.Xradar(dt)","key":"IZ1b3jczy2"},{"type":"output","id":"A_bs_u451zzWhaLiRi5S0","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x1000 with 0 Axes>","content_type":"text/plain"}}}],"key":"wr85Eji4kT"}],"key":"gRsFM3yBi0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Once we have a figure, let’s add our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r9ykUIgRLQ"},{"type":"inlineCode","value":"RadarMapDisplay","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"e925msUIWV"}],"key":"SLYmV4K2v9"}],"key":"vUFszLdoy2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=[10, 10])\ndisplay = pyart.graph.RadarMapDisplay(radar)","key":"YCuuhR1TPD"},{"type":"output","id":"Kk4XqNx7fTauNAc6VUJLi","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x1000 with 0 Axes>","content_type":"text/plain"}}}],"key":"TLKDtbETNK"}],"key":"OERKovoeVL"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Adding our map display without specifying a field to plot ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nSxn7WRgzg"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"won’t do anything","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t1ajexboMH"}],"key":"l5fD7BznGQ"},{"type":"text","value":" we need to specifically add a field to field using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gJlsGFE2Bh"},{"type":"inlineCode","value":".plot_ppi_map()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xl8H1qgNYZ"}],"key":"PozMJ4ngIm"}],"key":"ZXTMhw6TuR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi_map(\"uncorrected_reflectivity_h\")","key":"WDAQ3KMlux"},{"type":"output","id":"O7OP9nL329w8K7IW9bqBW","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4c8944ffba3d2f31f71f4c1fee303a44","path":"/arm-field-site-cookbook/build/4c8944ffba3d2f31f71f4c1fee303a44.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"xWHJn4hp6B"}],"key":"ZhTmZF5HTK"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"By default, it will plot the elevation scan, the the default colormap from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zvCGCGUnBf"},{"type":"inlineCode","value":"Matplotlib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Efj8TBFT5t"},{"type":"text","value":"... let’s customize!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iqbLPNSwUQ"}],"key":"Vfj59XG3dq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We add the following arguements:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FFCEgEwHj2"}],"key":"IrvG9Ey4uH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"sweep=3","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kxoeblpEes"},{"type":"text","value":" - The fourth elevation scan (since we are using Python indexing)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ljceEw6cIe"}],"key":"oCoOZsXolW"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"vmin=-20","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xQzEu2YQfq"},{"type":"text","value":" - Minimum value for our plotted field/colorbar","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pk76uQYBjd"}],"key":"CSNYmiPpA3"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"inlineCode","value":"vmax=60","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pvwCFPo5SR"},{"type":"text","value":" - Maximum value for our plotted field/colorbar","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VPIWkyCNdz"}],"key":"klggkIAfzQ"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"projection=ccrs.PlateCarree()","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WIYmvyV4DU"},{"type":"text","value":" - Cartopy latitude/longitude coordinate system","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ClcXtscpKU"}],"key":"gk11eu1qEg"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"inlineCode","value":"cmap='pyart_HomeyerRainbow'","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gOdeYOfxDX"},{"type":"text","value":" - Colormap to use, selecting one provided by PyART","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"OkHVGY5hsl"}],"key":"fMHOwx6gvy"}],"key":"bLfgY4GqHL"}],"key":"tigvdeuNIv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=[12, 12])\ndisplay = pyart.graph.RadarMapDisplay(radar)\ndisplay.plot_ppi_map(\n    \"uncorrected_reflectivity_h\",\n    sweep=3,\n    vmin=-20,\n    vmax=60,\n    projection=ccrs.PlateCarree(),\n    cmap=\"HomeyerRainbow\",\n)\nplt.show()","key":"Zt4lWfHeLC"},{"type":"output","id":"93YaJGBRlflTjI3gdbsOa","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fcc8fc52f1eb517bdc4d0ecd94dc8edb","path":"/arm-field-site-cookbook/build/fcc8fc52f1eb517bdc4d0ecd94dc8edb.png"},"text/plain":{"content":"<Figure size 1200x1200 with 2 Axes>","content_type":"text/plain"}}}],"key":"mDHzW7m0tQ"}],"key":"GNOlHmPBPq"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can change many parameters in the graph by changing the arguments to plot_ppi_map. As you can recall from earlier. simply view these arguments in a Jupyter notebook by typing:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d0iKkh05NB"}],"key":"ij6vhQxjEX"}],"key":"LNj7hxBbms"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"?display.plot_ppi_map","key":"kfMHkYehRi"},{"type":"output","id":"XTtI7R_RYriNPxcTOCLmC","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"\u001b[0;31mSignature:\u001b[0m\n\u001b[0mdisplay\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot_ppi_map\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mfield\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0msweep\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mmask_tuple\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mvmin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mvmax\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mnorm\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mmask_outside\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mtitle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mtitle_flag\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcolorbar_flag\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcolorbar_label\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcolorbar_orient\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'vertical'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mfig\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mlat_lines\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mlon_lines\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mprojection\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mmin_lon\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mmax_lon\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mmin_lat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mmax_lat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mwidth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mheight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mlon_0\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mlat_0\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mresolution\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'110m'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mshapefile\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mshapefile_kwargs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0medges\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mgatefilter\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mfilter_transitions\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0membellish\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0madd_grid_lines\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mraster\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mticks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mticklabs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0medgecolors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'face'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;31mDocstring:\u001b[0m\nPlot a PPI volume sweep onto a geographic map.\n\nParameters\n----------\nfield : str\n    Field to plot.\nsweep : int, optional\n    Sweep number to plot.\n\nOther Parameters\n----------------\nmask_tuple : (str, float)\n    Tuple containing the field name and value below which to mask\n    field prior to plotting, for example to mask all data where\n    NCP < 0.5 set mask_tuple to ['NCP', 0.5]. None performs no masking.\nvmin : float\n    Luminance minimum value, None for default value.\n    Parameter is ignored is norm is not None.\nvmax : float\n    Luminance maximum value, None for default value.\n    Parameter is ignored is norm is not None.\nnorm : Normalize or None, optional\n    matplotlib Normalize instance used to scale luminance data. If not\n    None the vmax and vmin parameters are ignored. If None, vmin and\n    vmax are used for luminance scaling.\ncmap : str or None\n    Matplotlib colormap name. None will use the default colormap for\n    the field being plotted as specified by the Py-ART configuration.\nmask_outside : bool\n    True to mask data outside of vmin, vmax. False performs no\n    masking.\ntitle : str\n    Title to label plot with, None to use default title generated from\n    the field and tilt parameters. Parameter is ignored if title_flag\n    is False.\ntitle_flag : bool\n    True to add a title to the plot, False does not add a title.\ncolorbar_flag : bool\n    True to add a colorbar with label to the axis. False leaves off\n    the colorbar.\nticks : array\n    Colorbar custom tick label locations.\nticklabs : array\n    Colorbar custom tick labels.\ncolorbar_label : str\n    Colorbar label, None will use a default label generated from the\n    field information.\ncolorbar_orient : 'vertical' or 'horizontal'\n    Colorbar orientation.\nax : Cartopy GeoAxes instance\n    If None, create GeoAxes instance using other keyword info.\n    If provided, ax must have a Cartopy crs projection and projection\n    kwarg below is ignored.\nfig : Figure\n    Figure to add the colorbar to. None will use the current figure.\nlat_lines, lon_lines : array or None\n    Locations at which to draw latitude and longitude lines.\n    None will use default values which are resonable for maps of\n    North America.\nprojection : cartopy.crs class\n    Map projection supported by cartopy. Used for all subsequent calls\n    to the GeoAxes object generated. Defaults to LambertConformal\n    centered on radar.\nmin_lat, max_lat, min_lon, max_lon : float\n    Latitude and longitude ranges for the map projection region in\n    degrees.\nwidth, height : float\n    Width and height of map domain in meters.\n    Only this set of parameters or the previous set of parameters\n    (min_lat, max_lat, min_lon, max_lon) should be specified.\n    If neither set is specified then the map domain will be determined\n    from the extend of the radar gate locations.\nshapefile : str\n    Filename for a shapefile to add to map.\nshapefile_kwargs : dict\n    Key word arguments used to format shapefile. Projection defaults\n    to lat lon (cartopy.crs.PlateCarree())\nresolution : '10m', '50m', '110m'.\n    Resolution of NaturalEarthFeatures to use. See Cartopy\n    documentation for details.\ngatefilter : GateFilter\n    GateFilter instance. None will result in no gatefilter mask being\n    applied to data.\nfilter_transitions : bool\n    True to remove rays where the antenna was in transition between\n    sweeps from the plot. False will include these rays in the plot.\n    No rays are filtered when the antenna_transition attribute of the\n    underlying radar is not present.\nedges : bool\n    True will interpolate and extrapolate the gate edges from the\n    range, azimuth and elevations in the radar, treating these\n    as specifying the center of each gate. False treats these\n    coordinates themselved as the gate edges, resulting in a plot\n    in which the last gate in each ray and the entire last ray are not\n    not plotted.\nembellish: bool\n    True by default. Set to False to supress drawing of coastlines\n    etc.. Use for speedup when specifying shapefiles.\nadd_grid_lines : bool\n    True by default. Set to False to supress drawing of lat/lon lines\n    Note that lat lon labels only work with certain projections.\nraster : bool\n    False by default. Set to true to render the display as a raster\n    rather than a vector in call to pcolormesh. Saves time in plotting\n    high resolution data over large areas. Be sure to set the dpi\n    of the plot for your application if you save it as a vector format\n    (i.e., pdf, eps, svg).\nalpha : float or None\n    Set the alpha tranparency of the radar plot. Useful for\n    overplotting radar over other datasets.\nedgecolor : str\n    Set the behavior of the edges of the pixels, by default\n    it will color them the same as the pixels (faces).\n**kwargs : additional keyword arguments to pass to pcolormesh.\n\u001b[0;31mFile:\u001b[0m      /opt/conda/lib/python3.11/site-packages/pyart/graph/radarmapdisplay.py\n\u001b[0;31mType:\u001b[0m      method","content_type":"text/plain"}}}],"key":"KXYKDvnbYL"}],"key":"cbZkg37HYt"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Or, let’s view a different elevation scan! To do this, change the sweep parameter in the plot_ppi_map function.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CD1FqPtX5a"}],"key":"hQhwccw883"}],"key":"w3dtSOU8eM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=[12, 12])\ndisplay = pyart.graph.RadarMapDisplay(radar)\ndisplay.plot_ppi_map(\n    \"uncorrected_reflectivity_h\",\n    sweep=0,\n    vmin=-20,\n    vmax=60,\n    projection=ccrs.PlateCarree(),\n    cmap=\"Carbone42\",\n)\nplt.show()","key":"crMxjHsLAf"},{"type":"output","id":"PqBLjUGo19Z20eNl2jGhT","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"28d8cee4f9e451f5965848b2f7abb545","path":"/arm-field-site-cookbook/build/28d8cee4f9e451f5965848b2f7abb545.png"},"text/plain":{"content":"<Figure size 1200x1200 with 2 Axes>","content_type":"text/plain"}}}],"key":"VsJV2bSwQ0"}],"key":"EgqImjIUvO"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lsRRl87kMM"}],"key":"Do3V8P9lbi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Gridding with Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kKGX7nWv68"}],"identifier":"gridding-with-py-art","label":"Gridding with Py-ART","html_id":"gridding-with-py-art","implicit":true,"key":"Zvoeek8iM2"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Gridding is an important workflow to understand when working with radar data! Here, we walk through the steps required.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BSndfXsnRi"}],"key":"AUUScz2Uln"}],"key":"cSMCXYkNjg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Antenna vs. Cartesian Coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AUpWIHSeUU"}],"identifier":"antenna-vs-cartesian-coordinates","label":"Antenna vs. Cartesian Coordinates","html_id":"antenna-vs-cartesian-coordinates","implicit":true,"key":"Kwrw0V4d0a"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Radar data, by default, is stored in a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oUnJORI0D5"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"polar (or antenna) coordinate system","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mrjdZK5dz9"}],"key":"NLJF58otYX"},{"type":"text","value":", with the data coordinates stored as an angle (ranging from 0 to 360 degrees with 0 == North), and a radius from the radar, and an elevation which is the angle between the ground and the ground.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cez8e8N8ue"}],"key":"h5yBIBKqLd"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This format can be challenging to plot, since it is scan/radar specific. Also, it can make comparing with model data, which is on a lat/lon grid, challenging since one would need to ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vwNpl3zeEX"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"transform","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"c1mEYlMvgi"}],"key":"kwdODoJXnU"},{"type":"text","value":" the model daa cartesian coordinates to polar/antenna coordiantes.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"udB7g5fBcE"}],"key":"KnIBFOk3Kh"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Fortunately, PyART has a variety of gridding routines, which can be used to ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"PiV84kC6jc"},{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"grid your data to a Cartesian grid","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qfB7OcbBaP"}],"key":"x3gv6LV4uc"},{"type":"text","value":". Once it is in this new grid, one can easily slice/dice the dataset, and compare to other data sources.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"QXxRQIGfnD"}],"key":"hoPwsXhfWW"},{"type":"heading","depth":3,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Why is Gridding Important?","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"YH0WZu6SD5"}],"identifier":"why-is-gridding-important","label":"Why is Gridding Important?","html_id":"why-is-gridding-important","implicit":true,"key":"SRTUFozToI"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Gridding is essential to combining multiple data sources (ex. multiple radars), and comparing to other data sources (ex. model data). There are also decisions that are made during the gridding process that have a large impact on the regridded data - for example:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mokVqgIogb"}],"key":"Ws80ltErfv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"What resolution should my grid be?","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"KrgepQUvfh"}],"key":"U2E81nieUv"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Which interpolation routine should I use?","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"VbIQwc82Sz"}],"key":"lqnqY7NObi"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"How smooth should my interpolated data be?","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"KiqPFI30YB"}],"key":"JUa5Uz5YZV"}],"key":"whXZz772M2"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"While there is not always a right or wrong answer, it is important to understand the options available, and document which routine you used with your data! Also - experiment with different options and choose the best for your use case!","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"FhkYgh31Fk"}],"key":"Pce05luest"},{"type":"heading","depth":3,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"The Grid Object","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"ixHbpjvsxA"}],"identifier":"the-grid-object","label":"The Grid Object","html_id":"the-grid-object","implicit":true,"key":"muCSjdVyyC"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We can ","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"FkLng2XIXV"},{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"transform our data","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"Qm0lHB4Pjm"}],"key":"EGb1Sw9fUA"},{"type":"text","value":" into this grid object, from the radars, using ","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"xtwgktC6D5"},{"type":"inlineCode","value":"pyart.map.grid_from_radars()","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"bnnpGZm26A"},{"type":"text","value":".","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"HV7ENt1N3m"}],"key":"LDx3OT6NwT"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Beforing gridding our data, we need to make a decision about the desired grid resolution and extent. For example, one might imagine a grid configuration of:","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"h79mueZs9F"}],"key":"fzJWfeb1oc"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":22,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Grid extent/limits","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Sqaea2KMJf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":23,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"20 km in the x-direction (north/south)","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"EteD0yDbZy"}],"key":"snu6BxOLWd"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"20 km in the y-direction (west/east)","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"gnuipxUirO"}],"key":"ilzSprsxaF"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"15 km in the z-direction (vertical)","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"nbQsuPOHkC"}],"key":"NARTctx59u"}],"key":"ThGCyV0Mn1"}],"key":"kBxEScBiTg"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"500 m spatial resolution","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"h08XiiHcOX"}],"key":"Y2rG95fop4"}],"key":"Fa696ieOcE"},{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"SUem5Qt3DA"},{"type":"inlineCode","value":"pyart.map.grid_from_radars()","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"O1jEXA5cd6"},{"type":"text","value":" function takes the grid shape and grid limits as input, with the order ","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"IR5uMLp65j"},{"type":"inlineCode","value":"(z, y, x)","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"Dqb4OCZirg"},{"type":"text","value":".","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"VjWF3XmwOe"}],"key":"LKNoq5ZmJm"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Let’s setup our configuration, setting our grid extent ","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"Fw7BjBHe4c"},{"type":"strong","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"first","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"RMWOz3nyp4"}],"key":"IcHUCBC8jc"},{"type":"text","value":", with the distance measured in ","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"GERCJqJUsx"},{"type":"strong","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"meters","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"B6281gXzuJ"}],"key":"aHdFQjWmY2"}],"key":"MYBLhRF7db"}],"key":"dex7D00REL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"z_grid_limits = (500.,15_000.)\ny_grid_limits = (-30_000.,30_000.)\nx_grid_limits = (-30_000.,30_000.)","key":"efujZuSxM0"},{"type":"output","id":"SWmNh2VPQkEE0-o2uX1pZ","data":[],"key":"rmPCHbVDsy"}],"key":"AsJPGqsJjY"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we have our grid limits, we can set our desired resolution (again, in meters)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P73XN28ikI"}],"key":"cDu6VcuSXk"}],"key":"AEyBxMpi6G"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"grid_resolution = 500","key":"o9cFi280oE"},{"type":"output","id":"nAj4RuLITUBoPqEC4Wv4c","data":[],"key":"ndth1YdxDv"}],"key":"zYIdhsfQ3n"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s compute our grid shape - using the extent and resolution to compute the number of grid points in each direction.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gXNJ7PpIr3"}],"key":"rfw5ykwmeB"}],"key":"E40LRrObjo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def compute_number_of_points(extent, resolution):\n    return int((extent[1] - extent[0])/resolution)","key":"c1prbPSBrT"},{"type":"output","id":"cyErx_XAttp2dmbsiMhjm","data":[],"key":"UTZRa004OG"}],"key":"kKVYcV5I7K"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we have a helper function to compute this, let’s apply it to our vertical dimension","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jg6CJoceLL"}],"key":"SyaW9AKv93"}],"key":"JT0ZWwJYkd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"z_grid_points = compute_number_of_points(z_grid_limits, grid_resolution)\nz_grid_points","key":"O4Mx5C6XH8"},{"type":"output","id":"qIdpJX_3LxGccLwxlCkbF","data":[{"output_type":"execute_result","execution_count":50,"metadata":{},"data":{"text/plain":{"content":"29","content_type":"text/plain"}}}],"key":"LpETzl4lcT"}],"key":"B1gMYJKmpn"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can apply this to the horizontal (x, y) dimensions as well.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZXCDQ5ZJR9"}],"key":"bTSJdloJuM"}],"key":"atPh0p9Edd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"x_grid_points = compute_number_of_points(x_grid_limits, grid_resolution)\ny_grid_points = compute_number_of_points(y_grid_limits, grid_resolution)\n\nprint(z_grid_points,\n      y_grid_points,\n      x_grid_points)","key":"IXTATmvepx"},{"type":"output","id":"hhvh4k7l5sNndssTXsdoe","data":[{"name":"stdout","output_type":"stream","text":"29 120 120\n"}],"key":"gAycUMBTls"}],"key":"RyudTBCHd6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use our configuration to grid the data!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rVvOtaEBO7"}],"identifier":"use-our-configuration-to-grid-the-data","label":"Use our configuration to grid the data!","html_id":"use-our-configuration-to-grid-the-data","implicit":true,"key":"vkw3vNEYQK"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that we have the grid shape and grid limits, let’s grid up our radar!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pyphHsCP7s"}],"key":"L6mKR7MnDr"}],"key":"FHeRWLO4z5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"grid = pyart.map.grid_from_radars([radar],\n                                  grid_shape=(z_grid_points,\n                                              y_grid_points,\n                                              x_grid_points),\n                                  grid_limits=(z_grid_limits,\n                                               y_grid_limits,\n                                               x_grid_limits),\n                                 )\ngrid","key":"llQOLMnNWd"},{"type":"output","id":"z1vTXSt7PDJa16LCjZ0-d","data":[{"output_type":"execute_result","execution_count":52,"metadata":{},"data":{"text/plain":{"content":"<pyart.core.grid.Grid at 0x7f2488db3250>","content_type":"text/plain"}}}],"key":"DlqXWVMNCU"}],"key":"id0Q2Ikj25"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Grid Object","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NVvJnZdb9G"}],"identifier":"plot-the-grid-object","label":"Plot the Grid Object","html_id":"plot-the-grid-object","implicit":true,"key":"kw59NZjWhB"},{"type":"heading","depth":4,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Plot a horizontal view of the data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CYQVJFP6jb"}],"identifier":"plot-a-horizontal-view-of-the-data","label":"Plot a horizontal view of the data","html_id":"plot-a-horizontal-view-of-the-data","implicit":true,"key":"jIw0Av5fWZ"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We can use the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Ih3N1mBYjN"},{"type":"inlineCode","value":"GridMapDisplay","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"R96q24Oep4"},{"type":"text","value":" from ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ATfchrV8cM"},{"type":"inlineCode","value":"pyart.graph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bfLsqa5n4e"},{"type":"text","value":" to visualize our regridded data, starting with a horizontal view (slice along a single vertical level)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SoJNIgZdew"}],"key":"qA9hqSDucJ"}],"key":"NU2lwH26nA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.GridMapDisplay(grid)\ndisplay.plot_grid('uncorrected_reflectivity_h',\n                  level=0,\n                  vmin=-20,\n                  vmax=60,\n                  cmap='HomeyerRainbow')","key":"PWqUhiGvQn"},{"type":"output","id":"LFtcCm1s5gmdUwOAmWRB1","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1a2af61e4e3a028a17ec3f9ea4ba73fc","path":"/arm-field-site-cookbook/build/1a2af61e4e3a028a17ec3f9ea4ba73fc.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"PPno0lRQy9"}],"key":"HWPIqeeBIO"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot a Latitudinal Slice","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IxynjYewEw"}],"identifier":"plot-a-latitudinal-slice","label":"Plot a Latitudinal Slice","html_id":"plot-a-latitudinal-slice","implicit":true,"key":"oa4cYw5clB"}],"key":"UcmSgFXW2d"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also slice through a single latitude or longitude!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dinGRIteif"}],"key":"kflf9vx6Oq"}],"key":"YFstIUppGC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_latitude_slice('uncorrected_reflectivity_h',\n                            lat=36.5,\n                            vmin=-20,\n                            vmax=60,\n                            cmap='HomeyerRainbow')\nplt.xlim([-20, 20]);","key":"YODrSjhR2Y"},{"type":"output","id":"cO8pUWVQgXnwhGXRRVhu-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"02f03a48a228828942be9d4d07ff66d0","path":"/arm-field-site-cookbook/build/02f03a48a228828942be9d4d07ff66d0.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"qlw6ntF8zZ"}],"key":"d5PT2DAEjw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot with Xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eyBwOtXC1w"}],"identifier":"plot-with-xarray","label":"Plot with Xarray","html_id":"plot-with-xarray","implicit":true,"key":"yE8cP0sFej"}],"key":"Jh5AynUDhC"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Another neat feature of the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p2srML3aT3"},{"type":"inlineCode","value":"Grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hmkaseB2e5"},{"type":"text","value":" object is that we can transform it to an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dReSMp4eEx"},{"type":"inlineCode","value":"xarray.Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JDKwx4PyY6"},{"type":"text","value":"!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EAR9aoOfJe"}],"key":"IQYHJS5d7v"}],"key":"F1DzYSp7os"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds = grid.to_xarray()\nds","key":"JYRElBdwnA"},{"type":"output","id":"XKYJ_F2-GV__E6MNMZFvT","data":[{"output_type":"execute_result","execution_count":55,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"41ebf52d425de6ed147dfb3d24b69337","path":"/arm-field-site-cookbook/build/41ebf52d425de6ed147dfb3d24b69337.html"},"text/plain":{"content":"<xarray.Dataset> Size: 59MB\nDimensions:                                                (time: 1, z: 29,\n                                                            y: 120, x: 120,\n                                                            nradar: 1)\nCoordinates: (12/16)\n  * time                                                   (time) object 8B 2...\n  * z                                                      (z) float64 232B 5...\n    lat                                                    (y, x) float64 115kB ...\n    lon                                                    (y, x) float64 115kB ...\n  * y                                                      (y) float64 960B -...\n  * x                                                      (x) float64 960B -...\n    ...                                                     ...\n    origin_altitude                                        (time) float32 4B ...\n    radar_altitude                                         (nradar) float32 4B ...\n    radar_latitude                                         (nradar) float32 4B ...\n    radar_longitude                                        (nradar) float32 4B ...\n    radar_time                                             (nradar) float64 8B ...\n    radar_name                                             (nradar) <U6 24B '...\nDimensions without coordinates: nradar\nData variables: (12/33)\n    unthresholded_power_copolar_v                          (time, z, y, x) float32 2MB ...\n    differential_reflectivity_lag_1                        (time, z, y, x) float32 2MB ...\n    normalized_coherent_power                              (time, z, y, x) float32 2MB ...\n    mean_doppler_velocity_v                                (time, z, y, x) float32 2MB ...\n    reflectivity_v                                         (time, z, y, x) float32 2MB ...\n    uncorrected_differential_reflectivity_lag_1            (time, z, y, x) float32 2MB ...\n    ...                                                     ...\n    unthresholded_power_copolar_h                          (time, z, y, x) float32 2MB ...\n    attenuation_corrected_differential_reflectivity_lag_1  (time, z, y, x) float32 2MB ...\n    uncorrected_differential_phase                         (time, z, y, x) float32 2MB ...\n    uncorrected_spectral_width_h                           (time, z, y, x) float32 2MB ...\n    uncorrected_reflectivity_v                             (time, z, y, x) float32 2MB ...\n    ROI                                                    (time, z, y, x) float32 2MB ...\nAttributes:\n    radar_name:       CSAPR2\n    nradar:           1\n    Conventions:      ARM-1.3 CF/Radial-1.4 instrument_parameters radar_param...\n    title:            ARM CSAPR2 Moments\n    institution:      U.S. Department of Energy Atmospheric Radiation Measure...\n    references:       See Instrument Handbook\n    comment:          \n    instrument_name:  CSAPR2\n    scan_name:        ppi\n    site_name:        bnfS3\n    source:           FROG 4.7.10:branch-4.7:muran-4.7.10:1001:mars-lxc-u20:2...\n    history:          created by user dsmgr on machine prod-proc4.adc.arm.gov...","content_type":"text/plain"}}}],"key":"FtZSfcP7Ay"}],"key":"VNQHOjRKfy"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, our plotting routine is a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jDSyM5Lkdj"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"one-liner","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sqv0YbInpd"}],"key":"OkyeRmFUpK"},{"type":"text","value":", starting with the horizontal slice:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PBV5WvDfey"}],"key":"OpDGY5LoKm"}],"key":"ADWkGbI18L"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds.isel(z=0).uncorrected_reflectivity_h.plot(cmap='HomeyerRainbow',\n                                             vmin=-20,\n                                             vmax=60);","key":"XnH2gHoaw6"},{"type":"output","id":"LJZjCri4hgqzip7sgLAPL","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ef393c3465b176328bcbe8a86cc93483","path":"/arm-field-site-cookbook/build/ef393c3465b176328bcbe8a86cc93483.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"n9ccRvhBse"}],"key":"a8i42QopJG"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And a vertical slice at a given y dimension (latitude)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hvmQbqTNNI"}],"key":"MFxNt9wZlO"}],"key":"GgurKcTydq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds.sel(y=1300,\n       method='nearest').uncorrected_reflectivity_h.plot(cmap='HomeyerRainbow',\n                                                         vmin=-20,\n                                                         vmax=60);","key":"ROzJ3xSxaj"},{"type":"output","id":"LeP1mvoV6nkG-WUBbxHwe","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5b971113a010e1d435b0c67453358e58","path":"/arm-field-site-cookbook/build/5b971113a010e1d435b0c67453358e58.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"AajqrG2kvo"}],"key":"lN7bdSGovk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Challenge","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I9LrGSdGmE"}],"identifier":"challenge","label":"Challenge","html_id":"challenge","implicit":true,"key":"wENNbAQ2BV"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Find data from last night’s event and plot it up! Feel free to grid, etc.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jIHir7szJp"}],"key":"xauM1Py7Pc"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Hint: the site code is ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GuHhDS4IWU"},{"type":"inlineCode","value":"bnf","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mHXkQ6wyUe"},{"type":"text","value":" with the instrument being ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ikEaHMYJxt"},{"type":"inlineCode","value":"csapr2","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Oe1HxP81Er"}],"key":"actkIvGf4P"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://adc.arm.gov","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"https://adc.arm.gov","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hFxUHGU8Vp"}],"urlSource":"https://adc.arm.gov","key":"bO67SIsK5q"}],"key":"G7H8mLImAF"}],"key":"fNotOnCBdc"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a9slPLBjuZ"},{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RZtVOBz4Io"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"mwLp38a9lI"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we covered the basics of working with radar data using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iVCCS3xGmE"},{"type":"inlineCode","value":"pyart","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yYmHXPwgXd"},{"type":"text","value":", including:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tkaeXOnh7r"}],"key":"ciTyatjYZP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Reading in a file using ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"T3vWNvwq3o"},{"type":"inlineCode","value":"xradar.io","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WIAyoiQWpA"}],"key":"r8kpWEGuCt"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Investigating the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Nsv4sbLNWk"},{"type":"inlineCode","value":"xradar","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bmQtoURAQf"},{"type":"text","value":" object","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"s27lKIau2Q"}],"key":"krMqjVsAA9"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Visualizing radar data using the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"EXTIkHxwwE"},{"type":"inlineCode","value":"RadarMapDisplay","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"g2TEJokM3l"}],"key":"B78hs9Do4t"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Gridding with Py-ART","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HFlWP0vSbM"}],"key":"NYBA6egG9K"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Visualizing gridded output","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gZPuXVz0Ry"}],"key":"AmRwGDIfxY"}],"key":"Ou3WN0PQwO"},{"type":"heading","depth":3,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"What’s Next","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GOybFPOtkj"}],"identifier":"whats-next","label":"What’s Next","html_id":"whats-next","implicit":true,"key":"WV814kQyY7"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"In the next few notebooks, we walk through applying data cleaning methods, and advanced visualization methods!","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"zHIaDex7ie"}],"key":"KNXVqOcwuG"}],"key":"UutWdYovbb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and References","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LVs3Wd7H3u"}],"identifier":"resources-and-references","label":"Resources and References","html_id":"resources-and-references","implicit":true,"key":"H4EopUrmxJ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Py-ART essentials links:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"PfbcSsLfvm"}],"key":"Ak1R4cI4GC"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Landing page","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LP6SuikKCF"}],"urlSource":"https://arm-doe.github.io/pyart/","key":"wU0JZVQYJq"}],"key":"WdMaovB5sv"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/examples/index.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Examples","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ShpTyJT3Y2"}],"urlSource":"https://arm-doe.github.io/pyart/examples/index.html","key":"w9LxceKdRk"}],"key":"LsCoXNInRd"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://github.com/ARM-DOE/pyart","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Source Code","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QDrVTwsDmp"}],"urlSource":"https://github.com/ARM-DOE/pyart","error":true,"key":"neBNBKkyfX"}],"key":"j9X1r1GaEL"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://groups.google.com/group/pyart-users/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Mailing list","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FfxbzK1Gnu"}],"urlSource":"https://groups.google.com/group/pyart-users/","key":"RS5MjfRInP"}],"key":"JQQx10W9Rq"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://github.com/ARM-DOE/pyart/issues","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Issue Tracker","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"JtenP3dFXD"}],"urlSource":"https://github.com/ARM-DOE/pyart/issues","error":true,"key":"vy6VT83Pmd"}],"key":"b7f9QlYdzv"}],"key":"zCiscnDVAW"}],"key":"dj5vm0js02"}],"key":"MSwEVP8WI6"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Radar Data with Py-ART","url":"/foundations/pyart/readme","group":"Foundations"},"next":{"title":"Introduction to Radar Meteorology with ARM","url":"/foundations/pyart/radars-with-arm","group":"Foundations"}}},"domain":"http://localhost:3000"}