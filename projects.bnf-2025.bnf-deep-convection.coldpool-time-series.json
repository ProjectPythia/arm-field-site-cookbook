{"version":2,"kind":"Notebook","sha256":"f7e79fc8cbc5bad3db218eb2a91c4d2c276b47815f7d99dbf0ff09a87f3b9558","slug":"projects.bnf-2025.bnf-deep-convection.coldpool-time-series","location":"/projects/bnf-2025/bnf-deep-convection/coldpool-time-series.ipynb","dependencies":[],"frontmatter":{"title":"Coldpool and Downdraft Analysis","content_includes_title":false,"kernelspec":{"name":"conda-base-py","display_name":"Python [conda env:base] *","language":"python"},"authors":[{"nameParsed":{"literal":"Max Grover","given":"Max","family":"Grover"},"name":"Max Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/mgrover1/arm-field-site-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":3}},"edit_url":"https://github.com/mgrover1/arm-field-site-cookbook/blob/main/projects/bnf-2025/bnf-deep-convection/coldpool-time-series.ipynb","exports":[{"format":"ipynb","filename":"coldpool-time-series.ipynb","url":"/arm-field-site-cookbook/build/coldpool-time-series-27e09d4f3abc4a6234caf5d7387c5cee.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import act\nimport pyart\nimport metpy\nfrom metpy.units import units\nimport numpy as np\nimport xarray as xr\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as colors\nimport glob","key":"ZHJmBgHbuO"},{"type":"output","id":"6RdWNd5QHfHmXCztFCK5j","data":[],"key":"LSzWp1u3Wm"}],"key":"TIcZzd55Ah"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"May 20 Event","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xpmHV35OQX"}],"identifier":"may-20-event","label":"May 20 Event","html_id":"may-20-event","implicit":true,"key":"lAfN76MgWT"}],"key":"EvJscFfwpC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# this is pulling individual May 20 C-SAPR2 radar data\ncsacr = \"/data/project/ARM_Summer_School_2025/bnf/bnfcsapr2cfrS3.a1/bnfcsapr2cfrS3.a1.20250520.233012.nc\"\nds_csacr = xr.open_dataset(csacr)\nds_csacr","key":"OQ1WOwS15O"},{"type":"output","id":"wARxMfFTTCYb8EH_aQD7W","data":[{"output_type":"execute_result","execution_count":117,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"aa957dd6e04d79e4cc5b8c93bf65b705","path":"/arm-field-site-cookbook/build/aa957dd6e04d79e4cc5b8c93bf65b705.html"},"text/plain":{"content":"<xarray.Dataset> Size: 761MB\nDimensions:                                                (time: 5404,\n                                                            range: 1100,\n                                                            sweep: 15)\nCoordinates:\n  * time                                                   (time) datetime64[ns] 43kB ...\n  * range                                                  (range) float32 4kB ...\n    azimuth                                                (time) float32 22kB ...\n    elevation                                              (time) float32 22kB ...\nDimensions without coordinates: sweep\nData variables: (12/51)\n    base_time                                              datetime64[ns] 8B ...\n    time_offset                                            (time) datetime64[ns] 43kB ...\n    attenuation_corrected_differential_reflectivity        (time, range) float32 24MB ...\n    attenuation_corrected_differential_reflectivity_lag_1  (time, range) float32 24MB ...\n    attenuation_corrected_reflectivity_h                   (time, range) float32 24MB ...\n    censor_mask                                            (time, range) int32 24MB ...\n    ...                                                     ...\n    latitude                                               float32 4B ...\n    longitude                                              float32 4B ...\n    altitude                                               float32 4B ...\n    lat                                                    float32 4B ...\n    lon                                                    float32 4B ...\n    alt                                                    float32 4B ...\nAttributes: (12/29)\n    command_line:          sapr2cfr_ingest -n csapr2cfr -R --max-runtime 0 -s...\n    Conventions:           ARM-1.3 CF/Radial-1.4 instrument_parameters radar_...\n    process_version:       sapr2cfr-1.7.1\n    dod_version:           csapr2cfr-a1-1.0\n    input_source:          /data/collection/bnf/bnfcsaprS3.00/BNF-ppi-15_BNF-...\n    site_id:               bnf\n    ...                    ...\n    sdp_version:           HW protocol: 2.1.0; PCI DSP firmware: 6.0.24; PCI ...\n    site_name:             bnfS3\n    software_version:      FROG 4.7.10:branch-4.7:muran-4.7.10:1001:mars-lxc-...\n    source:                FROG 4.7.10:branch-4.7:muran-4.7.10:1001:mars-lxc-...\n    template_name:         BNF-ppi-15\n    history:               created by user dsmgr on machine prod-proc3.adc.ar...","content_type":"text/plain"}}}],"key":"KP0kLUFbfT"}],"key":"I10LmDWw9n"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"below is radiosonde data, but I’m not sure I need it anymore","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lnEj5vD3a8"}],"key":"OLfp0gTURf"}],"key":"WDXNIaQxDx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# # pull in met data using ACT\n# # Set your username and token here!\n# username = 'abchui'\n# token = '3279f3ac6800743d'\n\n# # Set the datastream and start/enddates\n# datastream = 'bnfsondewnpnM1.b1'\n# startdate = '2025-05-20T23:00:00'\n# enddate = '2025-05-20T23:59:59'\n\n# # Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# # for ARM's instrument experts and cite their data if you use it in a publication\n# result_sonde = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\n\n# sonde = pyart.io.read_arm_sonde(\"/data/project/ARM_Summer_School_2025/bnf/bnfsondewnpnM1.b1/bnfsondewnpnM1.b1.20250520.233000.cdf\")","key":"LEUXWESgZ4"},{"type":"output","id":"Iu5KjLMGniuEtQFqeU3nW","data":[],"key":"fnThTAHMxK"}],"key":"uVYm5VFLEm"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pull MET data and then MAWS data for the dewpoint temperature (MET doesn’t have dewpoint) in order to calculate theta-e using metpy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BDEebzdQXs"}],"key":"sO4JpqWc13"}],"key":"It8B5AzAYp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# pull in met data using ACT\n# Set your username and token here!\nusername = 'abchui'\ntoken = '3279f3ac6800743d'\n\n# Set the datastream and start/enddates\ndatastream = 'bnfmetM1.b1'\nstartdate = '2025-05-20'\nenddate = '2025-05-21T23:59:59' #notice can give date and time or leave it blank (like with start date)\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult_met = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nds_met = act.io.read_arm_netcdf(result_met)\nds_met","key":"WecNxZJnVX"},{"type":"output","id":"7jCHj6JSGncPrlZXaP87W","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] bnfmetM1.b1.20250520.000000.cdf\n\nIf you use these data to prepare a publication, please cite:\n\nKyrouac, J., Shi, Y., & Tuftedal, M. Surface Meteorological Instrumentation\n(MET), 2025-05-20 to 2025-05-21, Bankhead National Forest, AL, USA; Long-term\nMobile Facility (BNF), Bankhead National Forest, AL, AMF3 (Main Site) (M1).\nAtmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1786358\n\n"},{"output_type":"execute_result","execution_count":119,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"4dce1334af095f1a46a0a9a3fbbcf8d1","path":"/arm-field-site-cookbook/build/4dce1334af095f1a46a0a9a3fbbcf8d1.html"},"text/plain":{"content":"<xarray.Dataset> Size: 340kB\nDimensions:                       (time: 1440, bound: 2)\nCoordinates:\n  * time                          (time) datetime64[ns] 12kB 2025-05-20 ... 2...\nDimensions without coordinates: bound\nData variables: (12/51)\n    base_time                     datetime64[ns] 8B 2025-05-20\n    time_offset                   (time) datetime64[ns] 12kB 2025-05-20 ... 2...\n    time_bounds                   (time, bound) object 23kB dask.array<chunksize=(1440, 2), meta=np.ndarray>\n    atmos_pressure                (time) float32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    qc_atmos_pressure             (time) int32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    temp_mean                     (time) float32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    ...                            ...\n    qc_logger_volt                (time) int32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    logger_temp                   (time) float32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    qc_logger_temp                (time) int32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    lat                           float32 4B ...\n    lon                           float32 4B ...\n    alt                           float32 4B ...\nAttributes: (12/26)\n    command_line:                met_ingest -s bnf -f M1 --max-runtime 0\n    Conventions:                 ARM-1.3\n    process_version:             ingest-met-4.56-0.el9\n    dod_version:                 met-b1-7.6\n    input_source:                /data/collection/bnf/bnfmetM1.00/M1_MET_Tabl...\n    site_id:                     bnf\n    ...                          ...\n    tbrg_precip_corr_info:       0.001000 * tbrg_precip_total^2 + 0.883000 * ...\n    history:                     created by user armflowprod on machine prod-...\n    _file_dates:                 ['20250520']\n    _file_times:                 ['000000']\n    _datastream:                 bnfmetM1.b1\n    _arm_standards_flag:         1","content_type":"text/plain"}}}],"key":"zHVnGpOI33"}],"key":"F79fdErfzN"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"calculate theta-e, a good indicator for a cold pool","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f5LUhO9k6S"}],"key":"KcjBlhwZ6B"}],"key":"SqrNuEPCVj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# thetae = metpy.calc.equivalent_potential_temperature(ds_met.atmos_pressure, ds_met.temp_mean, ds_met.dewpoint)","key":"xD5Z2jmnwW"},{"type":"output","id":"VAqfwj2IhfbRaWl0_figO","data":[],"key":"vxOCLqkp9S"}],"key":"kkILSdULIr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# # Create a plotting display object with 2 plots - do I want \n# display = act.plotting.TimeSeriesDisplay(ds_met, figsize=(15, 10), subplot_shape=(2,))\n\n# # Plot up the MET btemperature and precipitation\n# display.plot('temp_mean', subplot_index=(1,))\n# ax2 = display.axes[1].twinx() #copies the x axis onto both plots\n# ax2.plot(ds_met.time, ds_met.tbrg_precip_total, color='orange')\n\n# # Plot up a day/night background\n# display.day_night_background(subplot_index=(1,))\n\n# plt.show()","key":"hbdHJdu54j"},{"type":"output","id":"S4FZzZbdserzr7bBoBy-Y","data":[],"key":"NNt8oRV9zX"}],"key":"K6JSMJ53CG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"","key":"UnB8O08ajB"},{"type":"output","id":"lGV0LIVSyfqn4BTKC4T2P","data":[],"key":"c9Z5S6lZJP"}],"key":"r5eMtm7IUs"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"March 15","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I3EKbvvNb4"}],"identifier":"march-15","label":"March 15","html_id":"march-15","implicit":true,"key":"GGSwbbUDXR"}],"key":"nzk8G5rpVe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# C-SACR data\ncsacr = sorted(glob.glob(\"/data/project/ARM_Summer_School_2025/bnf/bnfcsapr2cfrS3.a1/bnfcsapr2cfrS3.a1.20250315.233012.nc\"))","key":"hoVioblFXO"},{"type":"output","id":"AR3B6R4E-JmT6pSpii7X4","data":[],"key":"KQTm5SpdAI"}],"key":"S4MpKvwEnG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"May 1","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VbicnGEaNb"}],"identifier":"may-1","label":"May 1","html_id":"may-1","implicit":true,"key":"g67mDaaCCG"}],"key":"davyBDpjw6"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pull kazr2 general mode data. Can use ACT for this because KAZR (RHI type) radar is not super huge file. The cone type ones (like SACR) are very large files and so would prefer to just pull individual files for those.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Vq7AfiLZky"}],"key":"Ig3ZCOvc8H"}],"key":"VO9kn3QwiK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set your username and token here!\nusername = 'abchui'\ntoken = '3279f3ac6800743d'\n\n# Set the datastream and start/enddates\ndatastream = 'bnfkazr2cfrgeM1.a1'\nstartdate = '2025-05-01'\nenddate = '2025-05-01T23:59:59' #notice can give date and time or leave it blank (like with start date)\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult_kazr2 = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nds_kazr2 = act.io.read_arm_netcdf(result_kazr2)","key":"jl6sB10l0T"},{"type":"output","id":"9WcBOvhdY2Ea2v3s6THfb","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.010001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.110001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.080000.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.220001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.140001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.150001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.230001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.100002.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.120001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.050000.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.000001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.030001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.190000.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.040001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.210002.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.160000.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.085959.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.020001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.195959.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.170000.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.130001.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.180000.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.060000.nc\n[DOWNLOADING] bnfkazr2cfrgeM1.a1.20250501.070000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nFeng, Y.-C., Lindenmaier, I., Matthews, A., Wendler, T., Melo  de Castro, V.,\nDeng, M., & Rocque, M. Ka ARM Zenith Radar (KAZR2CFRGE), 2025-05-01 to\n2025-05-01, Bankhead National Forest, AL, USA; Long-term Mobile Facility (BNF),\nBankhead National Forest, AL, AMF3 (Main Site) (M1). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1891991\n\n"}],"key":"rTabYwGdf0"}],"key":"b5RFF7mYDE"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pull MET data and then MAWS data for the dewpoint temperature (MET doesn’t have dewpoint) in order to calculate theta-e using metpy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JDw9V1ywY7"}],"key":"krZOtC8XzP"}],"key":"nFN6EWYiuJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# pull in met data using ACT\n# Set your username and token here!\nusername = 'abchui'\ntoken = '3279f3ac6800743d'\n\n# Set the datastream and start/enddates\ndatastream = 'bnfmetM1.b1'\nstartdate = '2025-05-01'\nenddate = '2025-05-01T23:59:59' #notice can give date and time or leave it blank (like with start date)\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult_met = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nds_met = act.io.read_arm_netcdf(result_met)\nds_met","key":"c0zpxpPYy4"},{"type":"output","id":"NcbC9ICAADdNpsY_8pNrZ","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] bnfmetM1.b1.20250501.000000.cdf\n\nIf you use these data to prepare a publication, please cite:\n\nKyrouac, J., Shi, Y., & Tuftedal, M. Surface Meteorological Instrumentation\n(MET), 2025-05-01 to 2025-05-01, Bankhead National Forest, AL, USA; Long-term\nMobile Facility (BNF), Bankhead National Forest, AL, AMF3 (Main Site) (M1).\nAtmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1786358\n\n"},{"output_type":"execute_result","execution_count":124,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"1020d85c4336e28bf88db06a02d68f6a","path":"/arm-field-site-cookbook/build/1020d85c4336e28bf88db06a02d68f6a.html"},"text/plain":{"content":"<xarray.Dataset> Size: 340kB\nDimensions:                       (time: 1440, bound: 2)\nCoordinates:\n  * time                          (time) datetime64[ns] 12kB 2025-05-01 ... 2...\nDimensions without coordinates: bound\nData variables: (12/51)\n    base_time                     datetime64[ns] 8B 2025-05-01\n    time_offset                   (time) datetime64[ns] 12kB 2025-05-01 ... 2...\n    time_bounds                   (time, bound) object 23kB dask.array<chunksize=(1440, 2), meta=np.ndarray>\n    atmos_pressure                (time) float32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    qc_atmos_pressure             (time) int32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    temp_mean                     (time) float32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    ...                            ...\n    qc_logger_volt                (time) int32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    logger_temp                   (time) float32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    qc_logger_temp                (time) int32 6kB dask.array<chunksize=(1440,), meta=np.ndarray>\n    lat                           float32 4B ...\n    lon                           float32 4B ...\n    alt                           float32 4B ...\nAttributes: (12/26)\n    command_line:                met_ingest -s bnf -f M1 --max-runtime 0\n    Conventions:                 ARM-1.3\n    process_version:             ingest-met-4.56-0.el9\n    dod_version:                 met-b1-7.6\n    input_source:                /data/collection/bnf/bnfmetM1.00/M1_MET_Tabl...\n    site_id:                     bnf\n    ...                          ...\n    tbrg_precip_corr_info:       0.001000 * tbrg_precip_total^2 + 0.883000 * ...\n    history:                     created by user armflowprod on machine prod-...\n    _file_dates:                 ['20250501']\n    _file_times:                 ['000000']\n    _datastream:                 bnfmetM1.b1\n    _arm_standards_flag:         1","content_type":"text/plain"}}}],"key":"DHaZycrRGv"}],"key":"aQ34g33cVE"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"download Radar Wind Profiler (rwp) data for wind average","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KyVz0tmDDG"}],"key":"u0w5cv36y9"}],"key":"lC3RFMZzD7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# pull in met data using ACT\n# Set your username and token here!\nusername = 'abchui'\ntoken = '3279f3ac6800743d'\n\n# Set the datastream and start/enddates\ndatastream = 'bnf915rwpwindavgM1.a1'\nstartdate = '2025-05-01'\nenddate = '2025-05-01T23:59:59' #notice can give date and time or leave it blank (like with start date)\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult_rwp = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nds_rwp = act.io.read_arm_netcdf(result_rwp)\nds_rwp","key":"Rc0FwzWsRo"},{"type":"output","id":"qSNB5vwX0abHCx57XDaEu","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] bnf915rwpwindavgM1.a1.20250501.000000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nMuradyan, P., & Ermold, B. Radar Wind Profiler (915RWPWINDAVG), 2025-05-01 to\n2025-05-01, Bankhead National Forest, AL, USA; Long-term Mobile Facility (BNF),\nBankhead National Forest, AL, AMF3 (Main Site) (M1). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1572183\n\n"},{"output_type":"execute_result","execution_count":132,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"f2ec0f22dbef363c43a84007a909a7ed","path":"/arm-field-site-cookbook/build/f2ec0f22dbef363c43a84007a909a7ed.html"},"text/plain":{"content":"<xarray.Dataset> Size: 676kB\nDimensions:                       (time: 24, bound: 2, mode: 2, level: 135,\n                                   beam: 3)\nCoordinates:\n  * time                          (time) datetime64[ns] 192B 2025-05-01 ... 2...\nDimensions without coordinates: bound, mode, level, beam\nData variables: (12/35)\n    base_time                     datetime64[ns] 8B 2025-05-01\n    time_offset                   (time) datetime64[ns] 192B 2025-05-01 ... 2...\n    time_bounds                   (time, bound) object 384B dask.array<chunksize=(24, 2), meta=np.ndarray>\n    mode_name                     (mode) |S10 20B dask.array<chunksize=(2,), meta=np.ndarray>\n    mode_number                   (mode) int32 8B dask.array<chunksize=(2,), meta=np.ndarray>\n    transmit_power_level_setting  (mode) float64 16B dask.array<chunksize=(2,), meta=np.ndarray>\n    ...                            ...\n    radial_velocity_power         (time, mode, beam, level) float32 78kB dask.array<chunksize=(24, 2, 3, 135), meta=np.ndarray>\n    radial_velocity_snr           (time, mode, beam, level) float32 78kB dask.array<chunksize=(24, 2, 3, 135), meta=np.ndarray>\n    radial_velocity_width         (time, mode, beam, level) float32 78kB dask.array<chunksize=(24, 2, 3, 135), meta=np.ndarray>\n    lat                           float32 4B ...\n    lon                           float32 4B ...\n    alt                           float32 4B ...\nAttributes: (12/20)\n    command_line:          rwp_ingest -n 915rwp -s bnf -f M1\n    Conventions:           ARM-1.2\n    process_version:       ingest-rwp-11.9-1.el7\n    dod_version:           915rwpwindavg-a1-1.0\n    input_source:          /data/collection/bnf/bnf915rwpM1.00/w2025-05-01-00...\n    site_id:               bnf\n    ...                    ...\n    doi:                   10.5439/1572183\n    history:               created by user dsmgr on machine prod-proc3.adc.ar...\n    _file_dates:           ['20250501']\n    _file_times:           ['000000']\n    _datastream:           bnf915rwpwindavgM1.a1\n    _arm_standards_flag:   1","content_type":"text/plain"}}}],"key":"mhiEC63cJe"}],"key":"K8ut0J1VQu"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"calculate theta-e, a good indicator of cold pool","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kS26YXBtW1"}],"key":"PUZZ9v3z3w"}],"key":"R3RcvmXJVa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# two ways to calculate theta-e: 1) pull maws data dewpoint temp and combine time or 2) calculate dewpoint temp from RH in the met data\n# method 2) is better because method 1) will cause loss of resolution\n\n# 1) to calculate theta-e, need met and maws data but by looking at the time from above you can see the time is slightly off, both are 1 min but maws if at 4 sec into the minute\n# ds_combined = xr.merge([ds_met.resample(time='1min').nearest(), ds_maws.resample(time='1min').nearest()], compat='override')\n# thetae = metpy.calc.equivalent_potential_temperature(ds_combined.atmos_pressure, ds_combined.temp_mean, ds_combined.atmospheric_dew_point)\n\n# 2) \ndewpt_temp = metpy.calc.dewpoint_from_relative_humidity(ds_met.temp_mean, ds_met.rh_mean)\nthetaeK = metpy.calc.equivalent_potential_temperature(ds_met.atmos_pressure, ds_met.temp_mean, dewpt_temp)\nthetaeC = thetaeK - 273.15*units.kelvin","key":"vZrXWkedZj"},{"type":"output","id":"6FiZkcSUEYJBFy31NuslN","data":[],"key":"Ri5NDVZnTR"}],"key":"DKJX6h0Zug"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"plot the KAZR RHI with the thetae? Or at least the mean temp and the wind barbs from rwp","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l0ASfJmzPX"}],"key":"E8eChLimbN"}],"key":"q1L5OktWuZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create a plotting display object with 3 plots - do I want \ndisplay = act.plotting.TimeSeriesDisplay({'KAZR2': ds_kazr2, 'MET': ds_met, 'RWP' : ds_rwp}, figsize=(15, 15), subplot_shape=(3,))\n\n# top (first) subplot (index of 0)\ndisplay.plot('reflectivity', dsname='KAZR2', subplot_index=(0,))\n\n# middle (second) subplot (index of 1)\n# Plot up the MET temperature and theta-e (calculated from met mean temp and RH)\ndisplay.plot('temp_mean', dsname='MET', subplot_index=(1,))\nax2 = display.axes[1].twinx() #copies the x axis onto both plots\nax2.plot(ds_met.time, thetaeC, color='orange')\nax2.set_ylabel('Equivalent Potential Temperature (degC)')\n\n# bottom (third) subplot (index of 2)\n# display.plot_barbs_from_spd_dir('wind_speed', num_barbs_x=20), dsname=\"RWP\", subplot_index=(2,1))\n\n# Plot up a day/night background\ndisplay.day_night_background(dsname='MET', subplot_index=(1,))\n\nplt.show()","key":"C3XSuhP4I7"},{"type":"output","id":"mUaSbRhDPSrWjsd2MqZEe","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"a0d09ad946fdafd85a36e4228b2badcc","path":"/arm-field-site-cookbook/build/a0d09ad946fdafd85a36e4228b2badcc.png"},"text/plain":{"content":"<Figure size 1500x1500 with 5 Axes>","content_type":"text/plain"}}}],"key":"jvW1Ub3Esr"}],"key":"vuqDUXIVO8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"May 12","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oNgOZ0pPEr"}],"identifier":"may-12","label":"May 12","html_id":"may-12","implicit":true,"key":"hdvckNE6iu"}],"key":"olAy9mib33"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"csacr = sorted(glob.glob(\"/data/project/ARM_Summer_School_2025/bnf/bnfcsapr2cfrS3.a1/bnfcsapr2cfrS3.a1.20250512.233012.nc\"))","key":"EIuZPYW5gg"},{"type":"output","id":"q1QoNhW3Mh-jS50g9lDg1","data":[],"key":"tFOTLZIzpJ"}],"key":"cMmCk9gTuH"}],"key":"vLFV04lst5"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Cold Pool Analysis from BNF XSACR","url":"/projects/bnf-2025/bnf-deep-convection/coldpool-radar-analysis","group":"BNF Deep Convection"},"next":{"title":"Cloud Condensation Nuclei and Precipitation Analysis","url":"/projects/bnf-2025/acid/ccn-droplet-count","group":"Aerosol Cloud Interactions Deposition (ACID)"}}},"domain":"http://localhost:3000"}