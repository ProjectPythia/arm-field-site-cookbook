{"version":2,"kind":"Notebook","sha256":"da8dda213f67c2758665606cf7957cfd91281a5814b39d940cc4d45759aca814","slug":"projects.bnf-2025.acid.optical-properties","location":"/projects/bnf-2025/acid/optical-properties.ipynb","dependencies":[],"frontmatter":{"title":"Aerosol Optical Properties at BNF","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Max Grover","given":"Max","family":"Grover"},"name":"Max Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/mgrover1/arm-field-site-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":3}},"source_url":"https://github.com/mgrover1/arm-field-site-cookbook/blob/main/projects/bnf-2025/acid/optical-properties.ipynb","edit_url":"https://github.com/mgrover1/arm-field-site-cookbook/edit/main/projects/bnf-2025/acid/optical-properties.ipynb","thumbnail":"/arm-field-site-cookbook/build/33705c75de1c0997e47bdf15c5b51f4c.jpeg","exports":[{"format":"ipynb","filename":"optical-properties.ipynb","url":"/arm-field-site-cookbook/build/optical-properties-cba84431df80ef7e629c178fdca59e52.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","style":{"height":"300px"},"url":"/arm-field-site-cookbook/build/33705c75de1c0997e47bdf15c5b51f4c.jpeg","alt":"BNF Instruments","key":"RTC5maihMx","urlSource":"https://www.arm.gov/uploads/53943128233_e595b5afeb_c.jpg"}],"key":"ph65qPSrkH"}],"key":"iqUYVJq8Yx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Aerosol Optical Properties at BNF","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AOAGQjXkBU"}],"identifier":"aerosol-optical-properties-at-bnf","label":"Aerosol Optical Properties at BNF","html_id":"aerosol-optical-properties-at-bnf","implicit":true,"key":"dFGZhVd29J"}],"key":"hjEElploub"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gxYfUwNe6i"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"DeHg6fJuyI"}],"key":"tGTaFdtbgR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import act\nimport numpy as np\nimport pandas as pd\nimport xarray as xr\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as colors","key":"Ek3z3JAuAc"},{"type":"output","id":"FSqfrW6gPZP6-rBuGuNbB","data":[],"key":"m6r2miZSzz"}],"key":"kxPyc45Jl6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access Aerosol Property Data at BNF","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yFmyTJCLQX"}],"identifier":"access-aerosol-property-data-at-bnf","label":"Access Aerosol Property Data at BNF","html_id":"access-aerosol-property-data-at-bnf","implicit":true,"key":"FFVQ5mqd3w"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Use the ACT library to search and download data at BNF","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LPd8oY3UnZ"}],"key":"yV1Zw11AqX"}],"key":"Z30kAoGfjd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set your username and token\nusername = 'mgrover4'\ntoken = '176e1559b67be630'\n\n# Set the datastream and start/enddates\ndatastream = 'bnfaoscaps3wM1.b1'\nstartdate = '2025-05-08'\nenddate = '2025-05-11T23:59:59'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult_caps = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\n\ndatastream = 'bnfaossmpsM1.b1'\nresult_smps = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\n\ndatastream = 'bnfaosnephdryM1.b1'\nresult_neph = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\n\n# Set the datastream and start/enddates\ndatastream = 'bnfmetM1.b1'\nresult_met = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\n\ndatastream = 'bnfaoppsap1flynn1mM1.c1'\nresult_psap = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\n\ndatastream = 'bnfaossp2xrM1.b1'\nresult_sp2 = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\n","key":"ENPMb65Vxl"},{"type":"output","id":"BR3hc6rXcutackrs3D9Tu","data":[{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaoscaps3wM1.b1.20250508.000000.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaoscaps3wM1.b1.20250509.000000.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaoscaps3wM1.b1.20250510.000000.nc\n"},{"output_type":"stream","name":"stdout","text":"\nIf you use these data to prepare a publication, please cite:\n\nKoontz, A., Sedlacek, A., & Smith, S. Cavity Attenuated Phase Shift Extinction\nMonitor (AOSCAPS3W), 2025-05-08 to 2025-05-11, Bankhead National Forest, AL,\nUSA; Long-term Mobile Facility (BNF), Bankhead National Forest, AL, AMF3 (Main\nSite) (M1). Atmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1406888\n\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaossmpsM1.b1.20250508.000459.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaossmpsM1.b1.20250509.000459.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaossmpsM1.b1.20250510.000459.nc\n[DOWNLOADING] bnfaossmpsM1.b1.20250511.000459.nc\n"},{"output_type":"stream","name":"stdout","text":"\nIf you use these data to prepare a publication, please cite:\n\nKuang, C., Singh, A., Howie, J., Salwen, C., & Hayes, C. Scanning mobility\nparticle sizer (AOSSMPS), 2025-05-08 to 2025-05-11, Bankhead National Forest,\nAL, USA; Long-term Mobile Facility (BNF), Bankhead National Forest, AL, AMF3\n(Main Site) (M1). Atmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1476898\n\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaosnephdryM1.b1.20250508.000003.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaosnephdryM1.b1.20250509.000001.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaosnephdryM1.b1.20250510.000002.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaosnephdryM1.b1.20250511.000003.nc\n\nIf you use these data to prepare a publication, please cite:\n\nKoontz, A., Flynn, C., Uin, J., Jefferson, A., Andrews, E., Salwen, C., & Hayes,\nC. Nephelometer (AOSNEPHDRY), 2025-05-08 to 2025-05-11, Bankhead National\nForest, AL, USA; Long-term Mobile Facility (BNF), Bankhead National Forest, AL,\nAMF3 (Main Site) (M1). Atmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1228051\n\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfmetM1.b1.20250508.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfmetM1.b1.20250509.000000.cdf\n[DOWNLOADING] bnfmetM1.b1.20250510.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfmetM1.b1.20250511.000000.cdf\n\nIf you use these data to prepare a publication, please cite:\n\nKyrouac, J., Shi, Y., & Tuftedal, M. Surface Meteorological Instrumentation\n(MET), 2025-05-08 to 2025-05-11, Bankhead National Forest, AL, USA; Long-term\nMobile Facility (BNF), Bankhead National Forest, AL, AMF3 (Main Site) (M1).\nAtmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1786358\n\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaoppsap1flynn1mM1.c1.20250508.000030.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaoppsap1flynn1mM1.c1.20250509.000030.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaoppsap1flynn1mM1.c1.20250510.000030.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaoppsap1flynn1mM1.c1.20250511.000030.nc\n\nIf you use these data to prepare a publication, please cite:\n\nKoontz, A., Flynn, C., Shilling, J., & Flynn, C. Aerosol Optical Properties\n(AOPPSAP1FLYNN1M), 2025-05-08 to 2025-05-11, Bankhead National Forest, AL, USA;\nLong-term Mobile Facility (BNF), Bankhead National Forest, AL, AMF3 (Main Site)\n(M1). Atmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1369240\n\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaossp2xrM1.b1.20250508.000000.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaossp2xrM1.b1.20250509.000000.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaossp2xrM1.b1.20250510.000000.nc\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfaossp2xrM1.b1.20250511.000001.nc\n\nIf you use these data to prepare a publication, please cite:\n\nSedlacek, A., & Ermold, B. Single Particle Soot Photometer (AOSSP2XR),\n2025-05-08 to 2025-05-11, Bankhead National Forest, AL, USA; Long-term Mobile\nFacility (BNF), Bankhead National Forest, AL, AMF3 (Main Site) (M1). Atmospheric\nRadiation Measurement (ARM) User Facility. https://doi.org/10.5439/2507427\n\n"}],"key":"cdrdFOcME7"}],"key":"VGnHatPDRB"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load the Data into ACT and Apply Quality Control","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HkaiuqJsjV"}],"identifier":"load-the-data-into-act-and-apply-quality-control","label":"Load the Data into ACT and Apply Quality Control","html_id":"load-the-data-into-act-and-apply-quality-control","implicit":true,"key":"h3KlZewkT7"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s read in the data using ACT and check out the data","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"elB9SNyEEy"}],"key":"rL0tLGOspP"}],"key":"uXSe9drBHD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_caps_org = act.io.read_arm_netcdf(result_caps)\nds_smps_org = act.io.read_arm_netcdf(result_smps)\nds_neph_org = act.io.read_arm_netcdf(result_neph)\nds_sp2_org = act.io.read_arm_netcdf(result_sp2)\nds_psap_org = act.io.read_arm_netcdf(result_psap)","key":"mjw8QOzir1"},{"type":"output","id":"kFcU0_ZPftPTC78BABmgt","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/act/io/arm.py:155: FutureWarning: In a future version of xarray the default value for data_vars will change from data_vars='all' to data_vars=None. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set data_vars explicitly.\n  ds = xr.open_mfdataset(filenames, **kwargs)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/act/io/arm.py:155: FutureWarning: In a future version of xarray the default value for data_vars will change from data_vars='all' to data_vars=None. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set data_vars explicitly.\n  ds = xr.open_mfdataset(filenames, **kwargs)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/act/io/arm.py:155: FutureWarning: In a future version of xarray the default value for data_vars will change from data_vars='all' to data_vars=None. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set data_vars explicitly.\n  ds = xr.open_mfdataset(filenames, **kwargs)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/act/io/arm.py:155: FutureWarning: In a future version of xarray the default value for data_vars will change from data_vars='all' to data_vars=None. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set data_vars explicitly.\n  ds = xr.open_mfdataset(filenames, **kwargs)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/act/io/arm.py:155: FutureWarning: In a future version of xarray the default value for data_vars will change from data_vars='all' to data_vars=None. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set data_vars explicitly.\n  ds = xr.open_mfdataset(filenames, **kwargs)\n"}],"key":"fn8CinZM0M"}],"key":"dhrncPft3b"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize the Data without Quality Control","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UwY708DGCb"}],"identifier":"visualize-the-data-without-quality-control","label":"Visualize the Data without Quality Control","html_id":"visualize-the-data-without-quality-control","implicit":true,"key":"Si5PXH1Y1k"}],"key":"JdqcKJYaBZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display = act.plotting.TimeSeriesDisplay({'CAPS': ds_caps_org, 'NEPH':ds_neph_org,'SMPS': ds_smps_org }, figsize=(15, 10), subplot_shape=(3,))\n\n\n\n# Plot up the variable in the first plot\n# Need to specify the dsname so it knows which dataset\n# to use for this data.  This is helpful when datasets \n# have similar variable names\ndisplay.plot('Bext_R', dsname='CAPS', subplot_index=(0,),color='red',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bext_G', dsname='CAPS', subplot_index=(0,),color='green',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bext_B', dsname='CAPS', subplot_index=(0,),color='blue',marker='o', linestyle='none',alpha=0.3)\n\n\ndisplay.plot('Bs_R_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='red',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bs_G_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='green',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bs_B_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='blue',marker='o', linestyle='none',alpha=0.3)\n\n# Plot up the MET btemperature and precipitation\ndisplay.plot('dN_dlogDp', dsname='SMPS', subplot_index=(2,))\ndisplay.axes[2,].set_ylim(0, 300)","key":"KzZRKKfGif"},{"type":"output","id":"WPYgd7cpgxSYierd0PJx0","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"(0.0, 300.0)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x1000 with 4 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"0ede1c3df60f1d9c39717b0599394b0c","path":"/arm-field-site-cookbook/build/0ede1c3df60f1d9c39717b0599394b0c.png"}}}],"key":"PMLyZPvwsO"}],"key":"tPHsC1qCHa"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can see that there’s some missing data in the plot above so let’s take a look at the embedded QC!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lFMrHYRN6b"}],"key":"J26uxctquo"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"First, for many of the ACT QC features, we need to get the dataset more to CF standard and that involves cleaning up some of the attributes and ways that ARM has historically handled QC","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zeZuLZ8SwN"}],"key":"D2ccpaoyX4"}],"key":"YqfL02SSh2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_caps_org.clean.cleanup()\nds_smps_org.clean.cleanup()\nds_neph_org.clean.cleanup()\nds_sp2_org.clean.cleanup()\nds_psap_org.clean.cleanup()\n\nds_caps_org = ds_caps_org.load().where(ds_caps_org.impactor_state == 1, drop=True)\nds_neph_org = ds_neph_org.load().where(ds_neph_org.impactor_state == 1, drop=True)\nds_psap_org = ds_psap_org.load().where(ds_psap_org.impactor_state == 1, drop=True)\n\nds_psap_org","key":"Hw0JtTELml"},{"type":"output","id":"aoCeJtG4gZe8hsLVy50JF","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"<xarray.Dataset> Size: 2MB\nDimensions:                         (time: 2777, bound: 2)\nCoordinates:\n  * time                            (time) datetime64[ns] 22kB 2025-05-08T00:...\nDimensions without coordinates: bound\nData variables: (12/132)\n    base_time                       (time) datetime64[ns] 22kB 2025-05-08 ......\n    time_offset                     (time) datetime64[ns] 22kB 2025-05-08T00:...\n    time_bounds                     (time, bound) object 44kB 2025-05-08 00:0...\n    impactor_state                  (time) float64 22kB 1.0 1.0 1.0 ... 1.0 1.0\n    Bs_B                            (time) float32 11kB nan 52.82 ... 29.16\n    qc_Bs_B                         (time) float64 22kB 9.0 16.0 0.0 ... 0.0 0.0\n    ...                              ...\n    K1_B                            (time) float32 11kB 0.02 0.02 ... 0.02 0.02\n    K1_G                            (time) float32 11kB 0.02 0.02 ... 0.02 0.02\n    K1_R                            (time) float32 11kB 0.02 0.02 ... 0.02 0.02\n    lat                             (time) float32 11kB 34.34 34.34 ... 34.34\n    lon                             (time) float32 11kB -87.34 -87.34 ... -87.34\n    alt                             (time) float32 11kB 293.0 293.0 ... 293.0\nAttributes: (12/20)\n    command_line:                    aosaop -n aosaoppsap -s bnf -f M1 -b 202...\n    Conventions:                     ARM-1.2\n    process_version:                 vap-aosaop-1.5-1.el7\n    dod_version:                     aoppsap1flynn1m-c1-1.4\n    input_datastreams:               bnfaosnephdry1mM1.b1 : 1.1 : 20250508.00...\n    site_id:                         bnf\n    ...                              ...\n    doi:                             10.5439/1369240\n    history:                         created by user dsmgr on machine prod-pr...\n    _file_dates:                     ['20250508', '20250509', '20250510', '20...\n    _file_times:                     ['000030', '000030', '000030', '000030']\n    _datastream:                     bnfaoppsap1flynn1mM1.c1\n    _arm_standards_flag:             1","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"5b53756f135bf0d9c968f994b46fc144","path":"/arm-field-site-cookbook/build/5b53756f135bf0d9c968f994b46fc144.html"}}}],"key":"VyYBTVOR6p"}],"key":"Z1XnWKCcGL"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resample to Equivalent Hourly Frequency","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ceXIihYTq4"}],"identifier":"resample-to-equivalent-hourly-frequency","label":"Resample to Equivalent Hourly Frequency","html_id":"resample-to-equivalent-hourly-frequency","implicit":true,"key":"zdpSnb8juT"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"And plot again!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EBkoseqxcg"}],"key":"fcOtfeQDBE"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Create a plotting display object with 2 plots.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oZoW0URuqH"}],"key":"gOO7YcYrGF"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Note we have to create a dictionary of datasets to pass in.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"TQN0GQFcfC"}],"key":"uf4UBXJeFD"}],"key":"WhfDIfBeBQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_caps=ds_caps_org.resample(time='60min').mean()\nds_neph=ds_neph_org.resample(time='60min').mean()\nds_psap=ds_psap_org.resample(time='60min').mean()\nds_sp2=ds_sp2_org.resample(time='60min').mean()\nds_smps=ds_smps_org.resample(time=\"60min\").mean()","key":"ulmLJh4RlC"},{"type":"output","id":"SsR9pFFAUcARzJloIJMiE","data":[],"key":"eSvqRyFxBB"}],"key":"WahHdfbqjO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display = act.plotting.TimeSeriesDisplay({'CAPS': ds_caps, 'NEPH':ds_neph,'SMPS': ds_smps }, figsize=(15, 10), subplot_shape=(3,))\n\n\n\n# Plot up the variable in the first plot\n# Need to specify the dsname so it knows which dataset\n# to use for this data.  This is helpful when datasets \n# have similar variable names\ndisplay.plot('Bext_R', dsname='CAPS', subplot_index=(0,),color='red',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bext_G', dsname='CAPS', subplot_index=(0,),color='green',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bext_B', dsname='CAPS', subplot_index=(0,),color='blue',marker='o', linestyle='none',alpha=0.3)\n\n\ndisplay.plot('Bs_R_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='red',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bs_G_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='green',marker='o', linestyle='none',alpha=0.3)\ndisplay.plot('Bs_B_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='blue',marker='o', linestyle='none',alpha=0.3)\n\n# Plot up the MET btemperature and precipitation\ndisplay.plot('dN_dlogDp', dsname='SMPS', subplot_index=(2,))\ndisplay.axes[2,].set_ylim(0, 300)","key":"QRINfA6pyQ"},{"type":"output","id":"14nOikF3CzVHEyCqoaW2E","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"(0.0, 300.0)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x1000 with 4 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"ccef5e2a4ae4171b9c9ffd534256fdfa","path":"/arm-field-site-cookbook/build/ccef5e2a4ae4171b9c9ffd534256fdfa.png"}}}],"key":"y7750Ojvzj"}],"key":"nCceFwEQh3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a Scatter Plot Comparison of Values","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nL1vUICgjR"}],"identifier":"create-a-scatter-plot-comparison-of-values","label":"Create a Scatter Plot Comparison of Values","html_id":"create-a-scatter-plot-comparison-of-values","implicit":true,"key":"r4mAfxxRzY"}],"key":"xOWq9nYUeg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dfNeph=ds_neph.to_dataframe()\ndfCaps=ds_caps.to_dataframe()\ndfPsap=ds_psap.to_dataframe()\ndfSp2=ds_sp2.to_dataframe()","key":"QsKisY4b6p"},{"type":"output","id":"lN5fbphvPb967ieW5aVT3","data":[],"key":"j6zBKchzde"}],"key":"DLik0CwJ2h"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df_merged = pd.merge_asof(dfCaps, dfPsap,on='time', direction='nearest')\n\ndf_merged['SSA B']=df_merged['Bs_B_Dry_Neph3W']/df_merged['Bext_B']\ndf_merged['SSA R']=df_merged['Bs_R_Dry_Neph3W']/df_merged['Bext_R']\ndf_merged['SSA G']=df_merged['Bs_G_Dry_Neph3W']/df_merged['Bext_G']\n\ndf_merged['alphaRB']=-(np.log (df_merged['Bs_R_Dry_Neph3W']/df_merged['Bs_B_Dry_Neph3W'])/np.log (700/450))\ndf_merged['alphaBG']=-(np.log (df_merged['Bs_B_Dry_Neph3W']/df_merged['Bs_G_Dry_Neph3W'])/np.log (450/550))\ndf_merged['alphaGR']=-(np.log (df_merged['Bs_G_Dry_Neph3W']/df_merged['Bs_R_Dry_Neph3W'])/np.log (550/700))\n\ndf_merged['Abs_B']=df_merged['Bext_B']-df_merged['Bs_B_Dry_Neph3W']\ndf_merged['Abs_R']=df_merged['Bext_R']-df_merged['Bs_R_Dry_Neph3W']\ndf_merged['Abs_G']=df_merged['Bext_G']-df_merged['Bs_G_Dry_Neph3W']\n\ndf_merged['AAE_RB']=-(np.log (df_merged['Abs_R']/df_merged['Abs_B'])/np.log (700/450))\ndf_merged['AAE_BG']=-(np.log (df_merged['Abs_B']/df_merged['Abs_G'])/np.log (450/550))\ndf_merged['AAE_GR']=-(np.log (df_merged['Abs_G']/df_merged['Abs_R'])/np.log (550/700))\n\ndf_merged['Avg_SAE']=(df_merged['alphaRB']+df_merged['alphaBG']+df_merged['alphaGR'])/3\ndf_merged['Avg_SSA']=(df_merged['SSA B']+df_merged['SSA R']+df_merged['SSA G'])/3","key":"eVES0B52Wz"},{"type":"output","id":"eR9aN4N2j1ZXED-DQZ3K4","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log\n  result = getattr(ufunc, method)(*inputs, **kwargs)\n/home/runner/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log\n  result = getattr(ufunc, method)(*inputs, **kwargs)\n"}],"key":"Rvy0NzLQer"}],"key":"FhhRJIuNJc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display = act.plotting.TimeSeriesDisplay({'CAPS': ds_caps, 'NEPH':ds_neph,'SMPS': ds_smps }, figsize=(15, 25), subplot_shape=(6,))\n\n\n\n# Plot up the variable in the first plot\n# Need to specify the dsname so it knows which dataset\n# to use for this data.  This is helpful when datasets \n# have similar variable names\ndisplay.plot('Bext_R', dsname='CAPS', subplot_index=(0,),color='red',marker='o', linestyle='none',alpha=1)\ndisplay.plot('Bext_G', dsname='CAPS', subplot_index=(0,),color='green',marker='o', linestyle='none',alpha=1)\ndisplay.plot('Bext_B', dsname='CAPS', subplot_index=(0,),color='blue',marker='o', linestyle='none',alpha=1)\n\ndisplay.plot('Bs_R_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='red',marker='o', linestyle='none',alpha=1)\ndisplay.plot('Bs_G_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='green',marker='o', linestyle='none',alpha=1)\ndisplay.plot('Bs_B_Dry_Neph3W', dsname='NEPH', subplot_index=(1,),color='blue',marker='o', linestyle='none',alpha=1)\n\n#display.axes[2,].plot(df_merged['time'],df_merged['SSA R'], color='red',marker='o', linestyle='none',alpha=0.3)\n#display.axes[2,].plot(df_merged['time'],df_merged['SSA G'],color='green',marker='o', linestyle='none',alpha=0.3)\n#display.axes[2,].plot(df_merged['time'],df_merged['SSA B'],color='blue',marker='o', linestyle='none',alpha=0.3)\n\n#df_merged.plot(x='time',y='SSA R',ax=display.axes[2,],color='red',style='o')\n##df_merged.plot(x='time',y='SSA B',ax=display.axes[2,],color='blue',style='o')\n#df_merged.plot(x='time',y='SSA G',ax=display.axes[2,],color='green',style='o')\n\n\n#display.axes[2,].set_ylabel('SSA')\n#display.axes[2,].set_ylim(0.25, 1.5)\n\n\ndf_merged.plot(x='time',y='AAE_BR',ax=display.axes[2,],color='black',style='o')\n\n\ndisplay.axes[2,].set_ylabel('AAE')\ntwinx=display.axes[2,].twinx()\ntwinx.set_ylabel('SAE')\ndf_merged.plot(x='time',y='AE_BR',ax=twinx,color='gold',style='o')\n#twinx.set_ylim(1.5, 3)\n\n\n\n#df_merged.plot(x='time',y='AAE_RB',ax=display.axes[4,],color='red',style='o')\n##df_merged.plot(x='time',y='AAE_BG',ax=display.axes[4,],color='blue',style='o')\n#df_merged.plot(x='time',y='AAE_GR',ax=display.axes[4,],color='green',style='o')\n#display.axes[4,].set_ylabel('AAE')\n#display.axes[4,].set_ylim(0, 2)\n\ndf_merged.plot(x='time',y='ssa_B_Virkkula',ax=display.axes[3,],color='green',style='-o')\ndisplay.axes[3,].set_ylabel('SSA')\n\n#display.axes[3,].set_ylim(0.6, 1)\n#twin_ax.set_ylim(0, 1)\ndfSp2 = pd.DataFrame({'time': ds_sp2['time'].values, 'rBC_particle_conc': ds_sp2['rBC_particle_conc'].values, 'scattering_particle_conc': ds_sp2['scattering_particle_conc'].values})\ndfSp2['rBC/Scattering']=dfSp2['rBC_particle_conc']/dfSp2['scattering_particle_conc']\n\n\ndfSp2.plot(x='time',y='rBC/Scattering', color='black', ax=display.axes[4,])\ndisplay.axes[4,].set_ylabel('BC/Scattering')\n\n\ndisplay.plot('dN_dlogDp', dsname='SMPS', subplot_index=(5,))\ndisplay.axes[5,].set_ylim(0, 300)\ndisplay.axes[5,].set_ylabel('Mobility diameter (nm) dN/dlogDp')","key":"LOjPjTgPNy"},{"type":"output","id":"UKEY-A4qSl8e7g65iri5D","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x2500 with 8 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"5c8f9b4fc2c46bc08bd65d3efdbe8dad","path":"/arm-field-site-cookbook/build/5c8f9b4fc2c46bc08bd65d3efdbe8dad.png"}}}],"key":"CF7Fx0EKu1"}],"key":"PpEJCXJR3Y"}],"key":"tZnu5sUIRP"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Cloud Condensation Nuclei and Precipitation Analysis","url":"/projects/bnf-2025/acid/ccn-droplet-count","group":"Aerosol Cloud Interactions Deposition (ACID)"},"next":{"title":"Surface Energy Balances from Tower Sites at BNF","url":"/projects/bnf-2025/land-atmosphere-interactions/surface-energy-balance-all-sites","group":"Land Atmosphere Interactions"}}},"domain":"http://localhost:3000"}