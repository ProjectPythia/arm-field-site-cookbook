{"version":2,"kind":"Notebook","sha256":"4c34bc43128851590206537d8be234203c677efd9e55077929688c301a830262","slug":"projects.bnf-2025.land-atmosphere-interactions.surface-energy-balance-all-sites","location":"/projects/bnf-2025/land-atmosphere-interactions/surface-energy-balance-all-sites.ipynb","dependencies":[],"frontmatter":{"title":"Surface Energy Balances from Tower Sites at BNF","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Max Grover","given":"Max","family":"Grover"},"name":"Max Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/mgrover1/arm-field-site-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":3}},"source_url":"https://github.com/mgrover1/arm-field-site-cookbook/blob/main/projects/bnf-2025/land-atmosphere-interactions/surface-energy-balance-all-sites.ipynb","edit_url":"https://github.com/mgrover1/arm-field-site-cookbook/edit/main/projects/bnf-2025/land-atmosphere-interactions/surface-energy-balance-all-sites.ipynb","thumbnail":"/arm-field-site-cookbook/build/5e416b4fd31228d1f151db42feaa3f1e.jpeg","exports":[{"format":"ipynb","filename":"surface-energy-balance-all-sites.ipynb","url":"/arm-field-site-cookbook/build/surface-energy-balan-e54a2732d214584119e2bcb57c175f48.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","style":{"width":"300px"},"url":"/arm-field-site-cookbook/build/5e416b4fd31228d1f151db42feaa3f1e.jpeg","alt":"BNF Instruments","key":"kt37LsKmCX","urlSource":"https://www.arm.gov/wp-content/uploads/20250108_114808_500px-478x1024.jpg"}],"key":"yhpoDfiTYO"}],"key":"OpgzhQTLa7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Surface Energy Balances from Tower Sites at BNF","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XJAUAehLus"}],"identifier":"surface-energy-balances-from-tower-sites-at-bnf","label":"Surface Energy Balances from Tower Sites at BNF","html_id":"surface-energy-balances-from-tower-sites-at-bnf","implicit":true,"key":"L0bATgiHfB"}],"key":"z87UxmLjer"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HkXpRcaSp3"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"dj1nwN5YkM"}],"key":"M7zq9ax5YK"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import act\nimport numpy as np\nimport xarray as xr\nimport matplotlib.pyplot as plt\nfrom scipy.stats import linregress\nimport matplotlib.colors as colors\nimport pandas as pd\nimport matplotlib.dates as mdates","visibility":"show","key":"OVk9dSkeyl"},{"type":"output","id":"0sbVJV47eNIO_ESDTM_qK","data":[],"visibility":"show","key":"LrrENvsezt"}],"visibility":"show","key":"A7RM0KJaYq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Download and Read Surface Energy Flux Datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hfK7EArKnd"}],"identifier":"download-and-read-surface-energy-flux-datasets","label":"Download and Read Surface Energy Flux Datasets","html_id":"download-and-read-surface-energy-flux-datasets","implicit":true,"key":"UYX1Zjqi8u"}],"key":"JKA3FnaiyM"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Set your username and token here!\nusername = 'mgrover4'\ntoken = '176e1559b67be630'\n\nstartdate = '2025-02-07'\nenddate = '2025-04-30T23:59:59'\n# Set the datastream and start/enddates\ndatastream_sebs_s40 = 'bnfsebsS40.b1'\ndatastream_sebs_s30 = 'bnfsebsS30.b1'\ndatastream_sebs_s20 = 'bnfsebsS20.b1'\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult_sebs_s40 = act.discovery.download_arm_data(username, token, datastream_sebs_s40, startdate, enddate)\nresult_sebs_s30 = act.discovery.download_arm_data(username, token, datastream_sebs_s30, startdate, enddate)\nresult_sebs_s20 = act.discovery.download_arm_data(username, token, datastream_sebs_s20, startdate, enddate)\n\ndatastream_ecor_s40 = 'bnfecorsfS40.b1'\ndatastream_ecor_s30 = 'bnfecorsfS30.b1'\ndatastream_ecor_s20 = 'bnfecorsfS20.b1'\n\nresult_ecor_s40 = act.discovery.download_arm_data(username, token, datastream_ecor_s40, startdate, enddate)\nresult_ecor_s30 = act.discovery.download_arm_data(username, token, datastream_ecor_s30, startdate, enddate)\nresult_ecor_s20 = act.discovery.download_arm_data(username, token, datastream_ecor_s20, startdate, enddate)\n\ndatastream_sirs_s40 = 'bnfsirsS40.b1'\ndatastream_sirs_s30 = 'bnfsirsS30.b1'\ndatastream_sirs_s20 = 'bnfsirsS20.b1'\n\nresult_sirs_s40 = act.discovery.download_arm_data(username, token, datastream_sirs_s40, startdate, enddate)\nresult_sirs_s30 = act.discovery.download_arm_data(username, token, datastream_sirs_s30, startdate, enddate)\nresult_sirs_s20 = act.discovery.download_arm_data(username, token, datastream_sirs_s20, startdate, enddate)","visibility":"show","key":"fCfkYYihmQ"},{"type":"output","id":"NmzncX_RD9S92REsqG8yk","data":[{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250207.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250208.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250209.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250210.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250211.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250212.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250213.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250214.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250215.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250216.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250217.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250218.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250219.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250220.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250221.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250222.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250223.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250224.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250225.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250226.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250227.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250228.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250301.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250302.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250303.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250304.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250305.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250306.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250307.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250308.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250309.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250310.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250311.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250312.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250313.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250314.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250315.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250316.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250317.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250318.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250319.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250320.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250321.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250322.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250323.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250324.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250325.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250326.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250327.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250328.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250329.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250330.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250331.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250401.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250402.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250403.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250404.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250405.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250406.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250407.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250408.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250409.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250410.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250411.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250412.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250413.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250414.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250415.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250416.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250417.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250418.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250419.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250420.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250421.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250422.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250423.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250424.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250425.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250426.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250427.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250428.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250429.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS40.b1.20250430.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"\nIf you use these data to prepare a publication, please cite:\n\nSullivan, R., Keeler, E., Pal, S., & Kyrouac, J. Surface Energy Balance System\n(SEBS), 2025-02-07 to 2025-04-30, Bankhead National Forest, AL, USA; Long-term\nMobile Facility (BNF), Bankhead National Forest, AL, Supplemental facility at\nDouble Springs (S40). Atmospheric Radiation Measurement (ARM) User Facility.\nhttps://doi.org/10.5439/1984921\n\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250207.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250208.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250209.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250210.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250211.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250212.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250213.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250214.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250215.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250216.000000.cdf\n"},{"output_type":"stream","name":"stdout","text":"[DOWNLOADING] bnfsebsS30.b1.20250217.000000.cdf\n"},{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mHTTPError\u001b[39m                                 Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[2]\u001b[39m\u001b[32m, line 14\u001b[39m\n\u001b[32m     11\u001b[39m \u001b[38;5;66;03m# Use ACT to easily download the data.  Watch for the data citation!  Show some support\u001b[39;00m\n\u001b[32m     12\u001b[39m \u001b[38;5;66;03m# for ARM's instrument experts and cite their data if you use it in a publication\u001b[39;00m\n\u001b[32m     13\u001b[39m result_sebs_s40 = act.discovery.download_arm_data(username, token, datastream_sebs_s40, startdate, enddate)\n\u001b[32m---> \u001b[39m\u001b[32m14\u001b[39m result_sebs_s30 = \u001b[43mact\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdiscovery\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdownload_arm_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43musername\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtoken\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdatastream_sebs_s30\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstartdate\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43menddate\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     15\u001b[39m result_sebs_s20 = act.discovery.download_arm_data(username, token, datastream_sebs_s20, startdate, enddate)\n\u001b[32m     17\u001b[39m datastream_ecor_s40 = \u001b[33m'\u001b[39m\u001b[33mbnfecorsfS40.b1\u001b[39m\u001b[33m'\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/site-packages/act/discovery/arm.py:160\u001b[39m, in \u001b[36mdownload_arm_data\u001b[39m\u001b[34m(username, token, datastream, startdate, enddate, time, output)\u001b[39m\n\u001b[32m    158\u001b[39m \u001b[38;5;66;03m# create file and write bytes to file\u001b[39;00m\n\u001b[32m    159\u001b[39m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mopen\u001b[39m(output_file, \u001b[33m'\u001b[39m\u001b[33mwb\u001b[39m\u001b[33m'\u001b[39m) \u001b[38;5;28;01mas\u001b[39;00m open_bytes_file:\n\u001b[32m--> \u001b[39m\u001b[32m160\u001b[39m     data = \u001b[43murlopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43mreq_save\u001b[49m\u001b[43m)\u001b[49m.read()\n\u001b[32m    161\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[33m'\u001b[39m\u001b[33mThis data file is not available\u001b[39m\u001b[33m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mstr\u001b[39m(data):\n\u001b[32m    162\u001b[39m         \u001b[38;5;28mprint\u001b[39m(fname + \u001b[33m'\u001b[39m\u001b[33m is not available for download\u001b[39m\u001b[33m'\u001b[39m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/urllib/request.py:216\u001b[39m, in \u001b[36murlopen\u001b[39m\u001b[34m(url, data, timeout, cafile, capath, cadefault, context)\u001b[39m\n\u001b[32m    214\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    215\u001b[39m     opener = _opener\n\u001b[32m--> \u001b[39m\u001b[32m216\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mopener\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43murl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtimeout\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/urllib/request.py:525\u001b[39m, in \u001b[36mOpenerDirector.open\u001b[39m\u001b[34m(self, fullurl, data, timeout)\u001b[39m\n\u001b[32m    523\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m processor \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m.process_response.get(protocol, []):\n\u001b[32m    524\u001b[39m     meth = \u001b[38;5;28mgetattr\u001b[39m(processor, meth_name)\n\u001b[32m--> \u001b[39m\u001b[32m525\u001b[39m     response = \u001b[43mmeth\u001b[49m\u001b[43m(\u001b[49m\u001b[43mreq\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    527\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m response\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/urllib/request.py:634\u001b[39m, in \u001b[36mHTTPErrorProcessor.http_response\u001b[39m\u001b[34m(self, request, response)\u001b[39m\n\u001b[32m    631\u001b[39m \u001b[38;5;66;03m# According to RFC 2616, \"2xx\" code indicates that the client's\u001b[39;00m\n\u001b[32m    632\u001b[39m \u001b[38;5;66;03m# request was successfully received, understood, and accepted.\u001b[39;00m\n\u001b[32m    633\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[32m200\u001b[39m <= code < \u001b[32m300\u001b[39m):\n\u001b[32m--> \u001b[39m\u001b[32m634\u001b[39m     response = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mparent\u001b[49m\u001b[43m.\u001b[49m\u001b[43merror\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    635\u001b[39m \u001b[43m        \u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mhttp\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrequest\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmsg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhdrs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    637\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m response\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/urllib/request.py:563\u001b[39m, in \u001b[36mOpenerDirector.error\u001b[39m\u001b[34m(self, proto, *args)\u001b[39m\n\u001b[32m    561\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m http_err:\n\u001b[32m    562\u001b[39m     args = (\u001b[38;5;28mdict\u001b[39m, \u001b[33m'\u001b[39m\u001b[33mdefault\u001b[39m\u001b[33m'\u001b[39m, \u001b[33m'\u001b[39m\u001b[33mhttp_error_default\u001b[39m\u001b[33m'\u001b[39m) + orig_args\n\u001b[32m--> \u001b[39m\u001b[32m563\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_call_chain\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/urllib/request.py:496\u001b[39m, in \u001b[36mOpenerDirector._call_chain\u001b[39m\u001b[34m(self, chain, kind, meth_name, *args)\u001b[39m\n\u001b[32m    494\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m handler \u001b[38;5;129;01min\u001b[39;00m handlers:\n\u001b[32m    495\u001b[39m     func = \u001b[38;5;28mgetattr\u001b[39m(handler, meth_name)\n\u001b[32m--> \u001b[39m\u001b[32m496\u001b[39m     result = \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    497\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m result \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    498\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/arm-field-site-cookbook-dev/lib/python3.11/urllib/request.py:643\u001b[39m, in \u001b[36mHTTPDefaultErrorHandler.http_error_default\u001b[39m\u001b[34m(self, req, fp, code, msg, hdrs)\u001b[39m\n\u001b[32m    642\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mhttp_error_default\u001b[39m(\u001b[38;5;28mself\u001b[39m, req, fp, code, msg, hdrs):\n\u001b[32m--> \u001b[39m\u001b[32m643\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m HTTPError(req.full_url, code, msg, hdrs, fp)\n\n\u001b[31mHTTPError\u001b[39m: HTTP Error 500: ","ename":"HTTPError","evalue":"HTTP Error 500: "}],"visibility":"show","key":"GVoaXMiHNm"}],"visibility":"show","key":"WYUtPyvPxj"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Let's read in the data using ACT and check out the data\nds_sebs_s40 = act.io.read_arm_netcdf(result_sebs_s40)\nds_sebs_s30 = act.io.read_arm_netcdf(result_sebs_s30)\nds_sebs_s20 = act.io.read_arm_netcdf(result_sebs_s20)\n\nds_sebs_s40\nds_sebs_s30\nds_sebs_s20","visibility":"show","key":"RtuUG4jphi"},{"type":"output","id":"AC-Tm8JOkFsIkEUOiAl7x","data":[],"visibility":"show","key":"yPimjofcZ8"}],"visibility":"show","key":"jARmHaa4IB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#ECOR has sensible and latent heat flux together\nds_ecor_s40 = act.io.read_arm_netcdf(result_ecor_s40)\nds_ecor_s30 = act.io.read_arm_netcdf(result_ecor_s30)\nds_ecor_s20 = act.io.read_arm_netcdf(result_ecor_s20)\n\nds_ecor_s40\nds_ecor_s30\nds_ecor_s20","key":"RsS3aueuhW"},{"type":"output","id":"I1oye_Rl8sprtnsz3YXS-","data":[],"key":"bZ05Da27Ac"}],"key":"H7ysqoo9qG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Let's read in the data using ACT and check out the data\nds_sirs_s40 = act.io.read_arm_netcdf(result_sirs_s40)\nds_sirs_s30 = act.io.read_arm_netcdf(result_sirs_s30)\nds_sirs_s20 = act.io.read_arm_netcdf(result_sirs_s20)\n\nds_sirs_s40\nds_sirs_s30\nds_sirs_s20","key":"KwSeohi79m"},{"type":"output","id":"kka1AshOjgIH5fJTqOEPw","data":[],"key":"AmmDleDQJ0"}],"key":"hwHj5dWYhr"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Apply Quality Control and Compute the Fluxes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zGnLCjIfwV"}],"identifier":"apply-quality-control-and-compute-the-fluxes","label":"Apply Quality Control and Compute the Fluxes","html_id":"apply-quality-control-and-compute-the-fluxes","implicit":true,"key":"nlM1JTLM82"}],"key":"iE2dHiDbV3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_sirs_s40.clean.cleanup()\nds_sirs_s30.clean.cleanup()\nds_sirs_s20.clean.cleanup()","key":"PvTRWKbjVn"},{"type":"output","id":"sl9_5PpZit7HMGulRK7Nh","data":[],"key":"wiWDvWlnZq"}],"key":"e2JdorfBoB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"net_radiation_s40 = (ds_sirs_s40['down_long_hemisp1'] - ds_sirs_s40['up_long_hemisp']) + (ds_sirs_s40['down_short_hemisp'] - ds_sirs_s40['up_short_hemisp'])\nnet_radiation_s30 = (ds_sirs_s30['down_long_hemisp1'] - ds_sirs_s30['up_long_hemisp']) + (ds_sirs_s30['down_short_hemisp'] - ds_sirs_s30['up_short_hemisp'])\nnet_radiation_s20 = (ds_sirs_s20['down_long_hemisp1'] - ds_sirs_s20['up_long_hemisp']) + (ds_sirs_s20['down_short_hemisp'] - ds_sirs_s20['up_short_hemisp'])\n","key":"OfocEcq5AD"},{"type":"output","id":"8Q45woEnc4QzVZ-9tfa1h","data":[],"key":"saGxs1dmeZ"}],"key":"n8mwXPHByu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#net radiation calculations\nnet_radiation_s40.plot()\nnet_radiation_s30.plot()\nnet_radiation_s20.plot()\nplt.title('Net Radiation')\nplt.ylabel('Radiation')","key":"riih2k3qgU"},{"type":"output","id":"8vB3dz0BMlG5fVLaBX6Th","data":[],"key":"MaCDmARsBA"}],"key":"MwXCIGYdzL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_sebs_s40.clean.cleanup()\nds_sebs_s30.clean.cleanup()\nds_sebs_s20.clean.cleanup()","key":"gloDT7chXB"},{"type":"output","id":"T5xgLDwVjwE6zdqF32F5L","data":[],"key":"r0td3lNv5B"}],"key":"OaDtA0e63V"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"avail_e_s40 = net_radiation_s40 - ds_sebs_s40['surface_soil_heat_flux_avg']\navail_e_s30 = net_radiation_s30 - ds_sebs_s30['surface_soil_heat_flux_avg']\navail_e_s20 = net_radiation_s20 - ds_sebs_s20['surface_soil_heat_flux_avg']","key":"gcZMaFocFj"},{"type":"output","id":"BW2ifBh5_Pa0I6-BtxL_d","data":[],"key":"vYS6YYKL7x"}],"key":"p1nxEFW8kV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#net radiation calculations\navail_e_s40.plot()\navail_e_s30.plot()\navail_e_s20.plot()\nplt.title('Net Radiation')\nplt.ylabel('Radiation')","key":"JLGE2LZSSf"},{"type":"output","id":"yz46OyatftTjJgHFAweS4","data":[],"key":"iDKSETTtbb"}],"key":"qYkrsscmsN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_ecor_s40.clean.cleanup()\nds_ecor_s30.clean.cleanup()\nds_ecor_s20.clean.cleanup()","key":"DhNLfWue8M"},{"type":"output","id":"OD8iIL42WdHrkT3XQqB3A","data":[],"key":"OpsHmuuS46"}],"key":"WyTf2vM6wk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"turb_flux_s40 = ds_ecor_s40['sensible_heat_flux'] + ds_ecor_s40['latent_flux']\nturb_flux_s30 = ds_ecor_s30['sensible_heat_flux'] + ds_ecor_s30['latent_flux']\nturb_flux_s20 = ds_ecor_s20['sensible_heat_flux'] + ds_ecor_s20['latent_flux']","key":"RvfVeuiEKe"},{"type":"output","id":"PjqUdnFCYfC0pPUrAYT2v","data":[],"key":"fO9xYskLR8"}],"key":"wQZdy3X7nc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#net radiation calculations\nturb_flux_s40.plot()\nturb_flux_s30.plot()\nturb_flux_s20.plot()\nplt.title('Turbulent Flux')\nplt.ylabel('Radiation')","key":"bcd1kgVFnD"},{"type":"output","id":"4JEHFzPWAVCUUL8qBRLaL","data":[],"key":"FZeF0iU7kQ"}],"key":"tHzHSAKSoh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"turb_flux_aligned_s40, avail_e_aligned_s40 = xr.align(turb_flux_s40, avail_e_s40, join = 'inner')\nturb_flux_aligned_s30, avail_e_aligned_s30 = xr.align(turb_flux_s40, avail_e_s30, join = 'inner')\nturb_flux_aligned_s20, avail_e_aligned_s20 = xr.align(turb_flux_s40, avail_e_s20, join = 'inner')","key":"zG1jgZYpKm"},{"type":"output","id":"FeZ4Npjgn5pFhlOsyYxFL","data":[],"key":"g6g2YIIQNE"}],"key":"SxKZaZQHRL"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compute and Plot Daily Energy Balance Using Xarray + Time Conversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gFv4QmOBLU"}],"identifier":"compute-and-plot-daily-energy-balance-using-xarray-time-conversion","label":"Compute and Plot Daily Energy Balance Using Xarray + Time Conversion","html_id":"compute-and-plot-daily-energy-balance-using-xarray-time-conversion","implicit":true,"key":"Avv8uBPuqM"}],"key":"RI4xM3EE3p"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# --- Step 1: Timezone-aware time-of-day coordinate ---\ndef add_time_of_day(da):\n    utc_times = pd.to_datetime(da.time.values).tz_localize('UTC')\n    central_times = utc_times.tz_convert('US/Central')\n    rounded = central_times.floor('30min')\n    time_of_day_strs = xr.DataArray(rounded.strftime('%H:%M'), coords={'time': da.time}, dims='time')\n    return da.assign_coords(time_of_day=time_of_day_strs)\n\n# --- Step 2: Assign to each variable ---\nle_td_s40 = add_time_of_day(ds_ecor_s40['latent_flux'])\nle_td_s30 = add_time_of_day(ds_ecor_s30['latent_flux'])\nle_td_s20 = add_time_of_day(ds_ecor_s20['latent_flux'])\n\nh_td_s40  = add_time_of_day(ds_ecor_s40['sensible_heat_flux'])\nh_td_s30  = add_time_of_day(ds_ecor_s30['sensible_heat_flux'])\nh_td_s20  = add_time_of_day(ds_ecor_s20['sensible_heat_flux'])\n\nrn_td_s40 = add_time_of_day(net_radiation_s40)\nrn_td_s30 = add_time_of_day(net_radiation_s30)\nrn_td_s20 = add_time_of_day(net_radiation_s20)\n\ng_td_s40  = add_time_of_day(ds_sebs_s40['surface_soil_heat_flux_avg'])\ng_td_s30  = add_time_of_day(ds_sebs_s30['surface_soil_heat_flux_avg'])\ng_td_s20  = add_time_of_day(ds_sebs_s20['surface_soil_heat_flux_avg'])\n\n# --- Step 3: Group by time-of-day and average ---\nle_avg_s40 = le_td_s40.groupby('time_of_day').mean('time')\nle_avg_s30 = le_td_s30.groupby('time_of_day').mean('time')\nle_avg_s20 = le_td_s20.groupby('time_of_day').mean('time')\n\nh_avg_s40  = h_td_s40.groupby('time_of_day').mean('time')\nh_avg_s30  = h_td_s30.groupby('time_of_day').mean('time')\nh_avg_s20  = h_td_s20.groupby('time_of_day').mean('time')\n\nrn_avg_s40 = rn_td_s40.groupby('time_of_day').mean('time')\nrn_avg_s30 = rn_td_s30.groupby('time_of_day').mean('time')\nrn_avg_s20 = rn_td_s20.groupby('time_of_day').mean('time')\n\ng_avg_s40  = g_td_s40.groupby('time_of_day').mean('time')\ng_avg_s30  = g_td_s30.groupby('time_of_day').mean('time')\ng_avg_s20  = g_td_s20.groupby('time_of_day').mean('time')\n\n# --- Step 4: Sort by time ---\ndef sort_by_time(da):\n    parsed = pd.to_datetime(da.time_of_day.values, format='%H:%M')\n    sort_idx = np.argsort(parsed)\n    return da.isel(time_of_day=sort_idx)\n\nle_avg_s40 = sort_by_time(le_avg_s40)\nle_avg_s30 = sort_by_time(le_avg_s30)\nle_avg_s20 = sort_by_time(le_avg_s20)\n\nh_avg_s40  = sort_by_time(h_avg_s40)\nh_avg_s30  = sort_by_time(h_avg_s30)\nh_avg_s20  = sort_by_time(h_avg_s20)\n\nrn_avg_s40 = sort_by_time(rn_avg_s40)\nrn_avg_s30 = sort_by_time(rn_avg_s30)\nrn_avg_s20 = sort_by_time(rn_avg_s20)\n\ng_avg_s40  = sort_by_time(g_avg_s40)\ng_avg_s30  = sort_by_time(g_avg_s30)\ng_avg_s20  = sort_by_time(g_avg_s20)\n\n# --- Step 5: Prepare time axis ---\ntime_objects = pd.to_datetime(le_avg_s40.time_of_day.values, format='%H:%M')\n\nfig, axs = plt.subplots(2, 2, figsize=(14, 10), sharex=True)\naxs = axs.flatten()\n\n# Site styles: solid lines, different colors\nsite_styles = {\n    'S40': {'color': 'blue',  'label': 'S40'},\n    'S30': {'color': 'black', 'label': 'S30'},\n    'S20': {'color': 'red',   'label': 'S20'}\n}\n\nlw = 2.5\nx = time_objects\n\n# LE\naxs[0].plot(x, le_avg_s40.values, linestyle='-', linewidth=lw, **site_styles['S40'])\naxs[0].plot(x, le_avg_s30.values, linestyle='-', linewidth=lw, **site_styles['S30'])\naxs[0].plot(x, le_avg_s20.values, linestyle='-', linewidth=lw, **site_styles['S20'])\naxs[0].set_title(\"Latent Heat Flux (LE)\", fontsize=14)\naxs[0].legend(fontsize=12)\naxs[0].grid(True)\n\n# H\naxs[1].plot(x, h_avg_s40.values, linestyle='-', linewidth=lw, **site_styles['S40'])\naxs[1].plot(x, h_avg_s30.values, linestyle='-', linewidth=lw, **site_styles['S30'])\naxs[1].plot(x, h_avg_s20.values, linestyle='-', linewidth=lw, **site_styles['S20'])\naxs[1].set_title(\"Sensible Heat Flux (H)\", fontsize=14)\naxs[1].legend(fontsize=12)\naxs[1].grid(True)\n\n# Rn\naxs[2].plot(x, rn_avg_s40.values, linestyle='-', linewidth=lw, **site_styles['S40'])\naxs[2].plot(x, rn_avg_s30.values, linestyle='-', linewidth=lw, **site_styles['S30'])\naxs[2].plot(x, rn_avg_s20.values, linestyle='-', linewidth=lw, **site_styles['S20'])\naxs[2].set_title(\"Net Radiation (Rn)\", fontsize=14)\naxs[2].legend(fontsize=12)\naxs[2].grid(True)\n\n# G\naxs[3].plot(x, g_avg_s40.values, linestyle='-', linewidth=lw, **site_styles['S40'])\naxs[3].plot(x, g_avg_s30.values, linestyle='-', linewidth=lw, **site_styles['S30'])\naxs[3].plot(x, g_avg_s20.values, linestyle='-', linewidth=lw, **site_styles['S20'])\naxs[3].set_title(\"Soil Heat Flux (G)\", fontsize=14)\naxs[3].legend(fontsize=12)\naxs[3].grid(True)\n\n# Shared X-axis formatting\nfor ax in axs:\n    ax.set_xlim([x[0], x[-1]])\n    ax.xaxis.set_major_formatter(mdates.DateFormatter('%H:%M'))\n    ax.xaxis.set_major_locator(mdates.HourLocator(interval=2))\n    ax.set_xlabel(\"Time of Day (Central)\", fontsize=14)\n    ax.set_ylabel(\"W/m²\", fontsize=14)\n\nplt.suptitle(\"Diurnal Cycles at BNF: Comparison Across S40, S30, S20\", fontsize=16)\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n","key":"sy4QJl7h0p"},{"type":"output","id":"Zmt3qbiigcA6xloj-miiW","data":[],"key":"W4i8Su1PF1"}],"key":"qrd0J3Ddus"}],"key":"xC6dCHJCxZ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Aerosol Optical Properties at BNF","url":"/projects/bnf-2025/acid/optical-properties","group":"Aerosol Cloud Interactions Deposition (ACID)"}}},"domain":"http://localhost:3000"}